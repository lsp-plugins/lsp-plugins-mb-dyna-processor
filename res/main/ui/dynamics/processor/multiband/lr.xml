<plugin resizable="true">
	<vbox spacing="4">
		<grid rows="2" cols="5" vspacing="4" hspacing="4" expand="true">

			<group ui:inject="GraphGroup" ipadding="0" expand="true" fill="true" text="labels.graphs.spectrum">
				<graph width.min="754" height.min="350" expand="true" fill="true">
					<origin hpos="-1" vpos="-1" visible="false"/>

					<!-- Additional grid -->
					<ui:with color="graph_alt_1">
						<ui:for id="f" first="20" last="90" step="10">
							<marker v="${:f}"/>
							<marker v="${:f*10}"/>
							<marker v="${:f*100}"/>
						</ui:for>
						<marker v="20000"/>
						<ui:with ox="1" oy="0">
							<marker v="+12 db"/>
							<marker v="-12 db"/>
							<marker v="-36 db"/>
							<marker v="-60 db"/>

							<ui:for id="g" first="-42" last="6" step="12">
								<marker v="${g} db" visibility=":zoom le -9 db"/>
							</ui:for>
							<ui:for id="g" first="-21" last="3" step="6">
								<marker v="${g} db" visibility=":zoom le -15 db"/>
							</ui:for>
						</ui:with>
					</ui:with>

					<!-- Secondary grid -->
					<ui:with color="graph_sec">
						<marker v="100"/>
						<marker v="1000"/>
						<marker v="10000"/>
						<marker value="0 db" ox="1" oy="0"/>
						<marker value="-24 db" ox="1" oy="0"/>
						<marker value="-48 db" ox="1" oy="0"/>
					</ui:with>

					<!-- Band markers -->
					<ui:with
						width="2"
						fill="0.5"
						color.a="0.2"
						hcolor.a="0.8"
						lcolor.a="0.8"
						hlcolor.a="0.8"
						rcolor.a="0.8"
						hrcolor.a="0.8"
						color="graph_marker_cycle"
						hcolor="graph_marker_cycle"
						lcolor="graph_marker_cycle"
						hlcolor="graph_marker_cycle"
						rcolor="graph_marker_cycle"
						hrcolor="graph_marker_cycle">
						<marker v="10" color.hue=":hue_0l" hcolor.hue=":hue_0l" rborder="16" rcolor.hue=":hue_0l" hrborder="16" hrcolor.hue=":hue_0l"/>
						<marker v="10" color.hue=":hue_0r" hcolor.hue=":hue_0r" rborder="16" rcolor.hue=":hue_0r" hrborder="16" hrcolor.hue=":hue_0r"/>
						<marker id="fre_0l" color.hue=":hue_0l" hcolor.hue=":hue_0l" lborder="16" lcolor.hue=":hue_0l" hlborder="16" hlcolor.hue=":hue_0l"/>
						<marker id="fre_0r" color.hue=":hue_0r" hcolor.hue=":hue_0r" lborder="16" lcolor.hue=":hue_0r" hlborder="16" hlcolor.hue=":hue_0r"/>
						<ui:for id="i" first="1" last="7">
							<marker id="sf_${i}l" ui:id="split_marker_${i}l" visibility=":cbe_${i}l" editable="true" color.hue=":hue_${i}l" hcolor.hue=":hue_${i}l" rborder="16" rcolor.hue=":hue_${i}l" hrborder="16" hrcolor.hue=":hue_${i}l" pointer="hsize"/>
							<marker id="sf_${i}r" ui:id="split_marker_${i}r" visibility=":cbe_${i}r" editable="true" color.hue=":hue_${i}r" hcolor.hue=":hue_${i}r" rborder="16" rcolor.hue=":hue_${i}r" hrborder="16" hrcolor.hue=":hue_${i}r" pointer="hsize"/>
							<marker id="fre_${i}l" visibility=":cbe_${i}l" color.hue=":hue_${i}l" hcolor.hue=":hue_${i}l" lborder="16" lcolor.hue=":hue_${i}l" hlborder="16" hlcolor.hue=":hue_${i}l"/>
							<marker id="fre_${i}r" visibility=":cbe_${i}r" color.hue=":hue_${i}r" hcolor.hue=":hue_${i}r" lborder="16" lcolor.hue=":hue_${i}r" hlborder="16" hlcolor.hue=":hue_${i}r"/>
						</ui:for>
					</ui:with>

					<!-- Meshes -->
					<mesh id="bfc_0l" width="2" fill="true" smooth="true" color="graph_mesh_cycle" color.hue=":hue_0l" fcolor="graph_mesh_cycle" fcolor.hue=":hue_0l" fcolor.a="0.9" visibility=":flt_l"/>
					<mesh id="bfc_0r" width="2" fill="true" smooth="true" color="graph_mesh_cycle" color.hue=":hue_0r" fcolor="graph_mesh_cycle" fcolor.hue=":hue_0r" fcolor.a="0.9" visibility=":flt_r"/>

					<ui:for id="i" first="1" last="7">
						<mesh id="bfc_${i}l" width="2" fill="true" smooth="true" color="graph_mesh_cycle" color.hue=":hue_${i}l" fcolor="graph_mesh_cycle" fcolor.hue=":hue_${i}l" fcolor.a="0.9" visibility=":flt_l and :cbe_${i}l"/>
						<mesh id="bfc_${i}r" width="2" fill="true" smooth="true" color="graph_mesh_cycle" color.hue=":hue_${i}r" fcolor="graph_mesh_cycle" fcolor.hue=":hue_${i}r" fcolor.a="0.9" visibility=":flt_r and :cbe_${i}r"/>
					</ui:for>
					<mesh id="ifg_l" oy=":_ui_zoomable_spectrum_graph ? 1 : 3" width="0" color="left_in" color.a="0.8" fcolor.a="0.8" fill="true" fcolor="left_in" visibility=":ife_l"/>
					<mesh id="ifg_r" oy=":_ui_zoomable_spectrum_graph ? 1 : 3" width="0" color="right_in" color.a="0.8" fcolor.a="0.8" fill="true" fcolor="right_in" visibility=":ife_r"/>
					<mesh id="ofg_l" oy=":_ui_zoomable_spectrum_graph ? 1 : 3" width="2" color="left" visibility=":ofe_l"/>
					<mesh id="ofg_r" oy=":_ui_zoomable_spectrum_graph ? 1 : 3" width="2" color="right" visibility=":ofe_r"/>

					<mesh id="ag_l" width="3" color="left" smooth="true"/>
					<mesh id="ag_r" width="3" color="right" smooth="true"/>

					<!-- Boundaries -->
					<marker v="1" ox="2" oy="0" color="graph_prim" visibility="false"/>
					<marker v="24000" color="graph_prim" visibility="false"/>

					<!-- Axis -->
					<axis min="10" max="24000" angle="0.0" log="true" visibility="false"/>
					<axis min="-72 db / (:zoom ** 3)" max="24 db * :zoom" color="graph_prim" angle="0.5" log="true"/>
					<axis min="-1" max="1" visibility="false" angle="0.5"/>
					<axis min="-72 db" max="24 db" color="graph_prim" angle="0.5" log="true" visibility="false"/>

					<!-- Text -->
					<ui:with ox="0" oy="2" y="0" halign="1" valign="1">
						<text x="10" text="graph.units.hz"/>
						<text x="20" text="20"/>
						<text x="30" text="30"/>
						<text x="50" text="50"/>
						<text x="100" text="100"/>
						<text x="200" text="200"/>
						<text x="300" text="300"/>
						<text x="500" text="500"/>
						<text x="1000" text="graph.values.x_k" text:value="1"/>
						<text x="2000" text="graph.values.x_k" text:value="2"/>
						<text x="3000" text="graph.values.x_k" text:value="3"/>
						<text x="5000" text="graph.values.x_k" text:value="5"/>
						<text x="10000" text="graph.values.x_k" text:value="10"/>
						<text x="20000" text="graph.values.x_k" text:value="20"/>
					</ui:with>

					<ui:with x="10" halign="1" valign="1">
						<ui:for id="g" first="-60" last="12" step="12">
							<text y="${g} db" text="${g}"/>
						</ui:for>
						<text y="0 db" ox="0" oy="2" text="graph.units.db" valign="-1"/>
						<ui:for id="g" first="-42" last="6" step="12">
							<text y="${g} db" text="${g}" visibility=":zoom le -9 db"/>
						</ui:for>
						<ui:for id="g" first="-21" last="3" step="6">
							<text y="${g} db" text="${g}" visibility=":zoom le -15 db"/>
						</ui:for>
					</ui:with>

					<ui:for id="i" first="1" count="7">
						<ui:with ox="0" oy="2" y="1" valign="-1" color="graph_marker_cycle" visibility="false" pad.h="4" font.bold="true">
							<text ui:id="split_note_${i}l" x=":sf_${i}l" halign="(:sf_${i}l lt 500) ? 1 : -1" text.halign="(:sf_${i}l lt 500) ? -1 : 1" color.hue=":hue_${i}l"/>
							<text ui:id="split_note_${i}r" x=":sf_${i}r" halign="(:sf_${i}r lt 500) ? 1 : -1" text.halign="(:sf_${i}s lt 500)r ? -1 : 1" color.hue=":hue_${i}r"/>
						</ui:with>
					</ui:for>
				</graph>
			</group>
			<!-- zoom -->
			<cell rows="2">
				<vbox vexpand="true" bg.color="bg_schema">
					<label font.name="lsp-icons" font.size="12" font.antialias="true" text="icons.main.zoom" color="text_icon" pad.b="4" pad.t="4"/>
					<fader id="zoom" angle="1" vexpand="true" bg.inherit="true" flat="true"/>
					<value id="zoom" width="40"/>
				</vbox>
			</cell>
			<!-- meter in -->
			<cell rows="2">
				<vbox vexpand="true" bg.color="bg_schema">
					<label text="labels.chan.in" pad.b="3" pad.t="3"/>
					<ledmeter vexpand="true" angle="1">
						<ledchannel id="ilm_l" min="-72 db" max="12 db" log="true" type="rms_peak" peak.visibility="true" value.color="left_in"/>
						<ledchannel id="ilm_r" min="-72 db" max="12 db" log="true" type="rms_peak" peak.visibility="true" value.color="right_in"/>
					</ledmeter>
				</vbox>
			</cell>

			<!-- meter out -->
			<cell rows="2">
				<vbox vexpand="true" bg.color="bg_schema">
					<label text="labels.chan.out" pad.b="3" pad.t="3"/>
					<ledmeter vexpand="true" angle="1">
						<ledchannel id="olm_l" min="-72 db" max="12 db" log="true" type="rms_peak" peak.visibility="true" value.color="left"/>
						<ledchannel id="olm_r" min="-72 db" max="12 db" log="true" type="rms_peak" peak.visibility="true" value.color="right"/>
					</ledmeter>
				</vbox>
			</cell>

			<!-- signal -->
			<cell rows="2">
				<vbox spacing="4">
					<group text="groups.signal" expand="true">
						<grid rows="5" cols="2" hspacing="4">
							<knob id="g_in" pad.r="4"/>
							<vbox vfill="false">
								<label text="labels.input" halign="0"/>
								<value id="g_in" sline="true" halign="0"/>
							</vbox>

							<knob id="g_out" pad.r="4"/>
							<vbox vfill="false">
								<label text="labels.output" expand="true" halign="0"/>
								<value id="g_out" width.min="50" sline="true" halign="0"/>
							</vbox>

							<knob id="g_dry" scolor="dry" pad.r="4"/>
							<vbox vfill="false">
								<label text="labels.signal.dry" halign="0"/>
								<value id="g_dry" width.min="50" sline="true" halign="0"/>
							</vbox>

							<knob id="g_wet" scolor="wet" pad.r="4"/>
							<vbox vfill="false">
								<label text="labels.signal.wet" halign="0"/>
								<value id="g_wet" width.min="50" sline="true" halign="0"/>
							</vbox>

							<knob id="drywet" scolor="drywet" pad.r="4"/>
							<vbox vfill="false">
								<label text="labels.signal.drywet" halign="0"/>
								<value id="drywet" width.min="50" sline="true" halign="0"/>
							</vbox>
						</grid>
					</group>

					<!-- Analysis -->
					<group text="groups.analysis" expand="true" ipadding="0">
						<vbox>
							<grid rows="4" cols="2">
								<align halign="-1" pad.t="4" pad.l="6">
									<label text="labels.fft.fft_in"/>
								</align>
								<hbox spacing="4" pad.v="4" pad.h="6" hfill="false">
									<button id="ife_l" text="labels.chan.L_eft" size="19" ui:inject="Button_left_8"/>
									<button id="ife_r" text="labels.chan.R_ight" size="19" ui:inject="Button_right_8"/>
								</hbox>

								<cell cols="2"><hsep pad.v="2" bg.color="bg" vreduce="true"/></cell>

								<align halign="-1" pad.t="4" pad.l="6">
									<label text="labels.fft.fft_out" halign="0"/>
								</align>
								<hbox spacing="4" pad.v="4" pad.h="6" hfill="false">
									<button id="ofe_l" text="labels.chan.L_eft" size="19" ui:inject="Button_left_8"/>
									<button id="ofe_r" text="labels.chan.R_ight" size="19" ui:inject="Button_right_8"/>
								</hbox>

								<cell cols="2"><hsep pad.v="2" bg.color="bg" vreduce="true"/></cell>
							</grid>

							<grid rows="2" cols="2" transpose="false" expand="true" hspacing="4">
								<knob id="react" size="20" pad.r="4" pad.l="6"/>
								<vbox vfill="false" pad.r="6">
									<label text="labels.metering.reactivity" halign="0"/>
									<value id="react" width.min="50" sline="true" halign="0"/>
								</vbox>

								<knob id="shift" size="20" pad.r="4" pad.l="6"/>
								<vbox vfill="false" pad.r="6">
									<label text="labels.metering.shift" halign="0"/>
									<value id="shift" width.min="50" sline="true" halign="0"/>
								</vbox>
							</grid>
						</vbox>
					</group>
				</vbox>
			</cell>

			<!-- bottom line -->
			<align halign="-1" vreduce="true">
				<hbox spacing="4" vreduce="true" bg.color="bg_schema" pad.h="6">
					<label text="labels.mode:"/>
					<combo id="mode" pad.r="8" pad.v="4"/>
					<label text="labels.sc_boost:"/>
					<combo id="envb" pad.r="8"/>
					<label text="labels.filters" pad.l="6"/>
					<hbox spacing="4" pad.h="6">
						<button id="flt_l" text="labels.chan.L_eft" size="22" ui:inject="Button_left"/>
						<button id="flt_r" text="labels.chan.R_ight" size="22" ui:inject="Button_right"/>
					</hbox>
				</hbox>
			</align>
		</grid>

		<!-- down part -->
		<hbox>

			<cgroup id="bsel" embed.h=":bsel ilt 2" embed.b=":bsel ilt 2" width.min="935" height.min="454">
				<!-- Main part (2 pages) -->
				<ui:for id="c" first="0" count="2">
					<ui:eval id="channel" value="(:c ieq 0) ? 'num_id_L_eft' : 'num_id_R_ight' "/>

					<grid rows="11" cols="25" transpose="true">
						<!-- Labels -->
						<label text="labels.band" pad.v="4" bg.color="bg_schema" hreduce="true"/>
						<vbox pad.v="4">
							<label text="labels.range"/>
							<label text="labels.units.:hz"/>
						</vbox>
						<label text="labels.controls" pad.v="4" bg.color="bg_schema"/>
						<cell rows="2" pad.v="4" hreduce="true" pad.h="6">
							<label text="labels.sc_preamp_makeup:db_db"/>
						</cell>
						<cell rows="2" pad.v="4">
							<label text="labels.attack_release:ms_ms"/>
						</cell>
						<cell rows="2" pad.v="4">
							<label text="labels.ratio_low_high"/>
						</cell>
						<cell ><hsep pad.v="2" bg.color="bg" vreduce="true"/></cell>
						<cell rows="6" pad.v="4">
							<label text="labels.threshold:db"/>
						</cell>

						<!-- Bands -->
						<ui:for id="i" first="0" last="7">
							<ui:set id="ch" value="${i}${(:c ieq 0) ? 'l' : 'r'}"/>

							<!-- Column 1 -->
							<ui:if test=":i ieq 0">
								<!-- Separator -->
								<cell rows="11"><vsep pad.h="2" bg.color="bg" hreduce="true"/></cell>
								<ui:with bright="((${i} ieq 0) or :cbe_${ch}) ? 1 : :const_bg_darken" bg.bright="((${i} ieq 0) or :cbe_${ch}) ? 1.0 : :const_bg_darken">
									<cell cols="2" bg.color="bg_schema">
										<button text="labels.chan.${channel}" text:id="${:i+1}" value="1" editable="false" pointer="arrow" hfill="true" ui:inject="Button_ne_Cycle" height="19" pad.h="6" pad.v="4"/>
									</cell>
									<cell cols="2" fill="false">
										<vbox height.min="40">
											<label text="0"/>
											<value id="fre_${ch}" width.min="30" sline="true" detailed="false"/>
										</vbox>
									</cell>
								</ui:with>
							</ui:if>

							<ui:if test=":i ine 0">
								<!-- Separator -->
								<cell rows="11"><vsep pad.h="2" bg.color="bg" hreduce="true"/></cell>
								<ui:with bright="((${i} ieq 0) or :cbe_${ch}) ? 1 : :const_bg_darken" bg.bright="((${i} ieq 0) or :cbe_${ch}) ? 1.0 : :const_bg_darken">
									<cell cols="2" bg.color="bg_schema">
										<button
											id="cbe_${ch}"
											text="labels.chan.${channel}"
											text:id="${:i+1}"
											ui:inject="Button_Cycle"
											hfill="true"
											height="19"
											down.color.hue=":hue_${ch}"
											down.hover.color.hue=":hue_${ch}"
											text.down.color.hue=":hue_${ch}"
											text.down.hover.color.hue=":hue_${ch}"
											border.down.color.hue=":hue_${ch}"
											border.down.hover.color.hue=":hue_${ch}"
											pad.h="6"
											pad.v="4"/>
									</cell>
									<knob id="sf_${ch}" size="16" ssize="3" pad.v="4" scolor="((${i} ieq 0) or :cbe_${ch}) ? 'cycle' : 'cycle_inactive'" scolor.hue=":hue_${ch}"/>
								</ui:with>
							</ui:if>
							<ui:with bright="((${i} ieq 0) or :cbe_${ch}) ? 1 : :const_bg_darken" bg.bright="((${i} ieq 0) or :cbe_${ch}) ? 1.0 : :const_bg_darken">
								<cell cols="2" pad.h="6" bg.color="bg_schema">
									<grid rows="2" cols="1" hspacing="4">
										<button
											id="pe_${ch}"
											text="labels.chan.on"
											height="19"
											hfill="true"
											ui:inject="Button_Cycle"
											down.color.hue=":hue_${ch}"
											down.hover.color.hue=":hue_${ch}"
											text.down.color.hue=":hue_${ch}"
											text.down.hover.color.hue=":hue_${ch}"
											border.down.color.hue=":hue_${ch}"
											border.down.hover.color.hue=":hue_${ch}"
											pad.v="4"/>
										<hbox pad.b="4">
											<button id="bs_${ch}" text="labels.chan.S_olo" height="19" hfill="true" ui:inject="Button_green_8"/>
											<button id="bm_${ch}" text="labels.chan.M_ute" height="19" hfill="true" ui:inject="Button_red_8" pad.l="4"/>
											<button id="sce_${ch}" text="labels.chan.Ext_ernal" height="19" hfill="true" ui:inject="Button_yellow_8" visibility="ex :sce_${ch}" pad.l="4"/>
										</hbox>
									</grid>
								</cell>
								<knob id="scp_${ch}" size="16" ssize="3" pad.t="4" scolor="((${i} ieq 0) or :cbe_${ch}) ? 'cycle' : 'cycle_inactive'" scolor.hue=":hue_${ch}"/>
								<value id="scp_${ch}" pad.b="4" width.min="32" detailed="false"/>
								<knob id="atd_${ch}" size="16" pad.t="4" ssize="3" scolor="((${i} ieq 0) or :cbe_${ch}) ? 'cycle' : 'cycle_inactive'" scolor.hue=":hue_${ch}"/>
								<value id="atd_${ch}" pad.b="4" detailed="false"/>
								<knob id="llr_${ch}" size="16" pad.t="4" ssize="3" scolor="((${i} ieq 0) or :cbe_${ch}) ? 'cycle' : 'cycle_inactive'" scolor.hue=":hue_${ch}"/>
								<value id="llr_${ch}" pad.b="4" detailed="false"/>
							</ui:with>
							<!-- Separator -->
							<cell cols="2"><hsep pad.v="2" bg.color="bg" vreduce="true"/></cell>

							<!-- Threshold block -->
							<cell cols="2" transpose="true">
								<grid rows="7" cols="3">
									<ui:for id="c" first="0" last="3">
										<ui:if test=":c ine 1 and :c ine 3">
											<ui:set id="x" value="${c}_${ch}"/>
											<ui:with bg.bright="(((${i} ieq 0) or (:cbe_${ch})) and :pe${x} ine 0) ? 1 : :const_bg_darken" bright="(((${i} ieq 0) or (:cbe_${ch})) and :pe${x} ine 0) ? 1 : :const_bg_darken">
												<button id="pe${x}" pad.t="4" pad.h="6" fill="true" height="10" text="labels.thr_eshold_num_id" text:id="${c}" ui:inject="Button_violet_6"/>
												<knob id="tl${x}" size="16" pad.t="4" ssize="3" scolor="(((${i} ieq 0) or (:cbe_${ch})) and :pe${x} ine 0) ? 'cycle' : 'cycle_inactive'" scolor.hue=":hue_${ch}"/>
												<value id="tl${x}" pad.b="4" detailed="false"/>
											</ui:with>
										</ui:if>
										<ui:if test=":c ieq 0"><hsep pad.v="2" bg.color="bg" vreduce="true"/></ui:if>
									</ui:for>

									<cell rows="7"><vsep pad.h="2" bg.color="bg" hreduce="true"/></cell>

									<ui:for id="c" first="0" last="3">
										<ui:if test=":c ine 0 and :c ine 2">
											<ui:set id="x" value="${c}_${ch}"/>
											<ui:with bg.bright="(((${i} ieq 0) or (:cbe_${ch})) and :pe${x} ine 0) ? 1 : :const_bg_darken" bright="(((${i} ieq 0) or (:cbe_${ch})) and :pe${x} ine 0) ? 1 : :const_bg_darken">
												<button id="pe${x}" pad.t="4" pad.h="6" fill="true" height="10" text="labels.thr_eshold_num_id" text:id="${c}" ui:inject="Button_violet_6"/>
												<knob id="tl${x}" size="16" pad.t="4" ssize="3" scolor="(((${i} ieq 0) or (:cbe_${ch})) and :pe${x} ine 0) ? 'cycle' : 'cycle_inactive'" scolor.hue=":hue_${ch}"/>
												<value id="tl${x}" pad.b="4" detailed="false"/>
											</ui:with>
										</ui:if>
										<ui:if test=":c ieq 1"><hsep pad.v="2" bg.color="bg" vreduce="true"/></ui:if>
									</ui:for>
								</grid>
							</cell>
							<ui:with bright="((${i} ieq 0) or :cbe_${ch}) ? 1 : :const_bg_darken" bg.bright="((${i} ieq 0) or :cbe_${ch}) ? 1.0 : :const_bg_darken">
								<!-- Column 2 -->
								<ui:if test=":i ine 0">
									<vbox>
										<value id="sf_${ch}" width.min="30" detailed="false" visibility=":cbe_${ch}"/>
										<value id="fre_${ch}" detailed="false"/>
										<label text="labels.chan.off" visibility="not :cbe_${ch}"/>
									</vbox>
								</ui:if>
								<knob id="mk_${ch}" size="16" pad.t="4" ssize="3" scolor="((${i} ieq 0) or :cbe_${ch}) ? 'cycle' : 'cycle_inactive'" scolor.hue=":hue_${ch}"/>
								<value id="mk_${ch}" pad.b="4" width.min="32" detailed="false"/>
								<knob id="rtd_${ch}" size="16" pad.t="4" ssize="3" scolor="((${i} ieq 0) or :cbe_${ch}) ? 'cycle' : 'cycle_inactive'" scolor.hue=":hue_${ch}" bg.color="bg_schema"/>
								<value id="rtd_${ch}" size="16" pad.b="4" detailed="false" bg.color="bg_schema"/>
								<knob id="hlr_${ch}" size="16" pad.t="4" ssize="3" scolor="((${i} ieq 0) or :cbe_${ch}) ? 'cycle' : 'cycle_inactive'" scolor.hue=":hue_${ch}" bg.color="bg_schema"/>
								<value id="hlr_${ch}" size="16" pad.b="4" detailed="false" bg.color="bg_schema"/>

							</ui:with>
						</ui:for>
					</grid>
				</ui:for>

				<!-- Band settings -->
				<ui:for id="xc" first="0" count="16">
					<ui:eval id="i" value=":xc idiv 2"/>
					<ui:set id="ch" value="${i}${(:xc imod 2) ? 'r' : 'l'}"/>
					<hbox>
						<grid rows="2" cols="4" spacing="4" bg.color="bg">
							<!-- Sidechain setup -->
							<cell rows="2">
								<vbox expand="false" bg.color="bg_schema">

									<grid rows="9" cols="3" transpose="true" bg.color="bg_schema">
										<cell cols="3">
											<void bg.color="bg" height="4" vreduce="true"/>
										</cell>

										<label text="labels.band"/>
										<ui:if test=":i ieq 0">
											<button text="labels.chan.active_num_id" text:id="${:i+1}" value="1" editable="false" pointer="arrow" hfill="true" ui:inject="Button_ne_Cycle" height="19" pad.h="6" pad.v="4"/>
										</ui:if>

										<ui:if test=":i ine 0">
											<button
												id="cbe_${ch}"
												text="labels.chan.active_num_id"
												text:id="${:i+1}"
												ui:inject="Button_Cycle"
												hfill="true"
												height="19"
												pad.h="6"
												pad.v="4"
												down.color.hue=":hue_${ch}"
												down.hover.color.hue=":hue_${ch}"
												text.down.color.hue=":hue_${ch}"
												text.down.hover.color.hue=":hue_${ch}"
												border.down.color.hue=":hue_${ch}"
												border.down.hover.color.hue=":hue_${ch}"/>
										</ui:if>

										<!-- Sidechain -->
										<cell cols="3">
											<vbox vreduce="true">
												<void bg.color="bg" height="4"/>
												<align halign="-1" vreduce="true">
													<label text="labels.sidechain" pad.h="6" height.max="20" bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken" bg.color="bg_schema_name" bg.bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken"/>
												</align>
												<hsep vreduce="true"/>
											</vbox>
										</cell>

										<ui:attributes bg.color="bg_schema" bg.bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken">
											<cell >
												<vbox >
													<label text="labels.sc.preamp" pad.h="6" pad.v="4" vreduce="true"/>
													<knob id="scp_${ch}" size="16" ssize="3" scolor="((${i} ieq 0) or :cbe_${ch}) ?  'cycle' : 'cycle_inactive'" pad.t="4" scolor.hue=":hue_${ch}"/>
													<value id="scp_${ch}" sline="true" width.min="48"/>
												</vbox>
											</cell>
										</ui:attributes>

										<cell cols="3">
											<hsep pad.v="2" bg.color="bg" vreduce="true"/>
										</cell>

										<ui:attributes bg.color="bg_schema" bg.bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken">
											<vbox>
												<label text="labels.sc.reactivity" pad.h="6" pad.v="4" vreduce="true"/>
												<knob id="scr_${ch}" size="16" ssize="3" scolor="((${i} ieq 0) or :cbe_${ch}) ?  'cycle' : 'cycle_inactive'" pad.t="4" scolor.hue=":hue_${ch}"/>
												<value id="scr_${ch}" sline="true"/>
											</vbox>
										</ui:attributes>

										<cell cols="3">
											<hsep pad.v="2" bg.color="bg" vreduce="true"/>
										</cell>

										<ui:attributes bg.color="bg_schema" bg.bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken">
											<vbox>
												<label text="labels.sc.lookahead" pad.h="6" pad.v="4" vreduce="true"/>
												<knob id="sla_${ch}" size="16" ssize="3" scolor="((${i} ieq 0) or :cbe_${ch}) ?  'cycle' : 'cycle_inactive'" pad.t="4" scolor.hue=":hue_${ch}"/>
												<value id="sla_${ch}" sline="true"/>
											</vbox>
										</ui:attributes>

										<cell rows="2">
											<vsep bg.color="bg" pad.h="2" hreduce="true"/>
										</cell>

										<vsep bg.color="bg" pad.h="2" hreduce="true"/>
										<vsep bg.color="bg" pad.h="2" hreduce="true"/>
										<vsep bg.color="bg" pad.h="2" hreduce="true"/>

										<ui:attributes bg.bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken">
											<hbox fill="false" pad.h="6" pad.t="4">
												<label text="labels.range" pad.r="4"/>
												<label text="labels.units.:hz"/>
											</hbox>

											<ui:if test=":i ieq 0">
												<vbox width="78" pad.v="2" fill="false">
													<label text="0"/>
													<value id="fre_${ch}" sline="true" detailed="false"/>
												</vbox>
											</ui:if>

											<ui:if test=":i ine 0">
												<hbox fill="false" pad.h="6">
													<knob id="sf_${ch}" size="16" ssize="3" pad.v="4" scolor="((${i} ieq 0) or :cbe_${ch}) ? 'cycle' : 'cycle_inactive'" scolor.hue=":hue_${ch}"/>
													<vbox fill="false" pad.l="6">
														<value id="sf_${ch}" width.min="32" detailed="false" visibility=":cbe_${ch}"/>
														<value id="fre_${ch}" detailed="false" width.min="32"/>
														<label text="labels.chan.off" width.min="32" visibility="not :cbe_${ch}"/>
													</vbox>
												</hbox>
											</ui:if>
										</ui:attributes>

										<ui:attributes bg.color="bg_schema" bg.bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken">
											<vbox>
												<label text="labels.setup" pad.h="6" pad.t="4" fill="false" vreduce="true"/>

												<vbox fill="false" spacing="1">
													<ui:with pad.h="6" pad.b="4">
														<combo id="scm_${ch}" fill="true" width.min="74"/>
														<combo id="scs_${ch}" fill="true"/>
														<button
															text="labels.chan.external_sc"
															id="sce_${ch}"
															ui:inject="Button_Cycle"
															hfill="true"
															height="19"
															down.color.hue=":hue_${ch}"
															down.hover.color.hue=":hue_${ch}"
															text.down.color.hue=":hue_${ch}"
															text.down.hover.color.hue=":hue_${ch}"
															border.down.color.hue=":hue_${ch}"
															border.down.hover.color.hue=":hue_${ch}"
															visibility="ex :sce_${ch}"/>
													</ui:with>
												</vbox>
											</vbox>
										</ui:attributes>

										<vbox bg.color="bg_schema">
											<button
												text="labels.flt.LCF"
												pad.h="6"
												id="sclc_${ch}"
												ui:inject="Button_Cycle"
												hfill="true"
												height="19"
												down.color.hue=":hue_${ch}"
												down.hover.color.hue=":hue_${ch}"
												text.down.color.hue=":hue_${ch}"
												text.down.hover.color.hue=":hue_${ch}"
												border.down.color.hue=":hue_${ch}"
												border.down.hover.color.hue=":hue_${ch}"
												bright="((:sclc_${ch} and :cbe_${ch}) or (:sclc_${ch} and :cbe_${ch} ine 0)) ?  1 : :const_bg_darken"
												bg.bright="((:sclc_${ch} and :cbe_${ch}) or (:sclc_${ch} and :cbe_${ch} ine 0)) ?  1 : :const_bg_darken"/>
											<knob
												id="sclf_${ch}"
												size="16"
												ssize="3"
												scolor="((:sclc_${ch} and :cbe_${ch}) or (:sclc_${ch} and :cbe_${ch} ine 0)) ? 'cycle' : 'cycle_inactive'"
												pad.v="4"
												pad.l="4"
												scolor.hue=":hue_${ch}"
												bright="((:sclc_${ch} and :cbe_${ch}) or (:sclc_${ch} and :cbe_${ch} ine 0)) ?  1 : :const_bg_darken"
												bg.bright="((:sclc_${ch} and :cbe_${ch}) or (:sclc_${ch} and :cbe_${ch} ine 0)) ?  1 : :const_bg_darken"/>
											<value
												id="sclf_${ch}"
												pad.h="6"
												bright="((:sclc_${ch} and :cbe_${ch}) or (:sclc_${ch} and :cbe_${ch} ine 0)) ?  1 : :const_bg_darken"
												bg.bright="((:sclc_${ch} and :cbe_${ch}) or (:sclc_${ch} and :cbe_${ch} ine 0)) ?  1 : :const_bg_darken"
												width.min="30"
												same.line="true"/>
										</vbox>
										<vbox bg.color="bg_schema">
											<button
												text="labels.flt.HCF"
												pad.h="6"
												id="schc_${ch}"
												ui:inject="Button_Cycle"
												hfill="true"
												height="19"
												down.color.hue=":hue_${ch}"
												down.hover.color.hue=":hue_${ch}"
												text.down.color.hue=":hue_${ch}"
												text.down.hover.color.hue=":hue_${ch}"
												border.down.color.hue=":hue_${ch}"
												border.down.hover.color.hue=":hue_${ch}"
												bright="((:schc_${ch} and :cbe_${ch}) or (:schc_${ch} and :cbe_${ch} ine 0)) ?  1 : :const_bg_darken"
												bg.bright="((:schc_${ch} and :cbe_${ch}) or (:schc_${ch} and :cbe_${ch} ine 0)) ? 1 : :const_bg_darken"/>
											<knob
												id="schf_${ch}"
												size="16"
												ssize="3"
												scolor="((:schc_${ch} and :cbe_${ch}) or (:schc_${ch} and :cbe_${ch} ine 0)) ? 'cycle' : 'cycle_inactive'"
												pad.v="4"
												pad.l="4"
												scolor.hue=":hue_${ch}"
												bright="((:schc_${ch} and :cbe_${ch}) or (:schc_${ch} and :cbe_${ch} ine 0)) ?  1 : :const_bg_darken"
												bg.bright="((:schc_${ch} and :cbe_${ch}) or (:schc_${ch} and :cbe_${ch} ine 0)) ? 1 : :const_bg_darken"/>
											<value
												id="schf_${ch}"
												pad.h="6"
												bg.bright="((:schc_${ch} and :cbe_${ch}) or (:schc_${ch} and :cbe_${ch} ine 0)) ? 1 : :const_bg_darken"
												bright="((:schc_${ch} and :cbe_${ch}) or (:schc_${ch} and :cbe_${ch} ine 0)) ? 1 : :const_bg_darken"
												width.min="30"
												same.line="true"/>
										</vbox>
									</grid>
								</vbox>

							</cell>
							<cell rows="2">
								<vbox expand="true" bg.color="bg_schema">

									<void bg.color="bg" height="4" vreduce="true"/>

									<align halign="-1" vreduce="true">
										<label text="labels.plug.dyna_processor" pad.h="6" height.max="20" bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken" bg.color="bg_schema_name" bg.bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken"/>
									</align>
									<hsep vreduce="true"/>

									<!-- Processor settings -->

									<grid rows="13" cols="13" spacing="0" bg.color="bg_schema">

										<label text="labels.specials.num" pad.h="6" pad.v="4" reduce="true" bg.bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken"/>
										<cell rows="13"><vsep bg.color="bg" pad.h="2" hreduce="true"/></cell>
										<label text="labels.enable" pad.h="6" pad.v="4" reduce="true" bg.bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken"/>
										<cell rows="13"><vsep bg.color="bg" pad.h="2" hreduce="true"/></cell>
										<label text="labels.thresh_old:db" pad.h="6" pad.v="4" bg.bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken"/>
										<label text="labels.gain:db" pad.h="6" pad.v="4" bg.bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken"/>
										<label text="labels.knee_:db" pad.h="6" pad.v="4" bg.bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken"/>
										<cell rows="13"><vsep bg.color="bg" pad.h="2" hreduce="true"/></cell>
										<cell cols="2"><label text="labels.attack:db_ms" pad.h="6" pad.v="4" bg.bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken"/></cell>
										<cell rows="13"><vsep bg.color="bg" pad.h="2" hreduce="true"/></cell>
										<cell cols="2"><label text="labels.release:db_ms" pad.h="6" pad.v="4" bg.bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken"/></cell>

										<ui:for id="c" first="0" last="3">
											<ui:set id="x" value="${c}_${ch}"/>
											<hsep bg.color="bg" pad.v="2" vreduce="true"/>
											<hsep bg.color="bg" pad.v="2" vreduce="true"/>
											<cell cols="3"><hsep bg.color="bg" pad.v="2" vreduce="true"/></cell>
											<cell cols="2"><hsep bg.color="bg" pad.v="2" vreduce="true"/></cell>
											<cell cols="2"><hsep bg.color="bg" pad.v="2" vreduce="true"/></cell>

											<cell rows="2" hreduce="true" pad.h="4" wmin="19"><label text="${c}" bg.bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken"/></cell>
											<cell rows="2">
												<vbox fill="false" pad="6" spacing="4" bg.bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken">
													<ui:with bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken">
														<button id="pe${x}" width.min="43" fill="true" height="10" text="labels.threshold" ui:inject="Button_violet_6"/>
														<button id="ae${x}" width.min="43" fill="true" height="10" text="labels.attack" ui:inject="Button_magenta_6"/>
														<button id="re${x}" width.min="43" fill="true" height="10" text="labels.release" ui:inject="Button_green_6"/>
													</ui:with>
												</vbox>
											</cell>
											<ui:with pad.h="6" pad.v="4" size="20">
												<knob
													id="tl${x}"
													scolor="(((${i} ieq 0) or (:cbe_${ch})) and (:pe${x} igt 0)) ? 'threshold' : 'threshold_inactive'"
													bg.bright="(((${i} ieq 0) or (:cbe_${ch})) and (:pe${x} igt 0)) ? 1 : :const_bg_darken"
													bright="(((${i} ieq 0) or (:cbe_${ch})) and (:pe${x} igt 0)) ? 1 : :const_bg_darken"/>
												<knob
													id="gl${x}"
													scolor="(((${i} ieq 0) or (:cbe_${ch})) and (:pe${x} igt 0)) ? 'kscale' : 'kscale_inactive'"
													bg.bright="(((${i} ieq 0) or (:cbe_${ch})) and (:pe${x} igt 0)) ? 1 : :const_bg_darken"
													bright="(((${i} ieq 0) or (:cbe_${ch})) and (:pe${x} igt 0)) ? 1 : :const_bg_darken"/>
												<knob
													id="kn${x}"
													scolor="(((${i} ieq 0) or (:cbe_${ch})) and (:pe${x} igt 0)) ? 'kscale' : 'kscale_inactive'"
													bg.bright="(((${i} ieq 0) or (:cbe_${ch})) and (:pe${x} igt 0)) ? 1 : :const_bg_darken"
													bright="(((${i} ieq 0) or (:cbe_${ch})) and (:pe${x} igt 0)) ? 1 : :const_bg_darken"/>
												<knob
													id="al${x}"
													scolor="(((${i} ieq 0) or (:cbe_${ch})) and (:ae${x} igt 0)) ? 'attack_1' : 'attack_inactive'"
													bright="(((${i} ieq 0) or (:cbe_${ch})) and (:ae${x} igt 0)) ? 1 : :const_bg_darken"
													bg.bright="(((${i} ieq 0) or (:cbe_${ch})) and (:ae${x} igt 0)) ? 1 : :const_bg_darken"/>
												<knob
													id="at${x}"
													scolor="(((${i} ieq 0) or (:cbe_${ch})) and (:ae${x} igt 0)) ? 'attack_2' : 'attack_inactive'"
													bright="(((${i} ieq 0) or (:cbe_${ch})) and (:ae${x} igt 0)) ? 1 : :const_bg_darken"
													bg.bright="(((${i} ieq 0) or (:cbe_${ch})) and (:ae${x} igt 0)) ? 1 : :const_bg_darken"/>
												<knob
													id="rl${x}"
													scolor="(((${i} ieq 0) or (:cbe_${ch})) and (:re${x} igt 0)) ? 'release_1' : 'release_inactive'"
													bright="(((${i} ieq 0) or (:cbe_${ch})) and (:re${x} igt 0)) ? 1 : :const_bg_darken"
													bg.bright="(((${i} ieq 0) or (:cbe_${ch})) and (:re${x} igt 0)) ? 1 : :const_bg_darken"/>
												<knob
													id="rt${x}"
													scolor="(((${i} ieq 0) or (:cbe_${ch})) and (:re${x} igt 0)) ? 'release_2' : 'release_inactive'"
													bright="(((${i} ieq 0) or (:cbe_${ch})) and (:re${x} igt 0)) ? 1 : :const_bg_darken"
													bg.bright="(((${i} ieq 0) or (:cbe_${ch})) and (:re${x} igt 0)) ? 1 : :const_bg_darken"/>
											</ui:with>
											<ui:with pad.h="6" pad.v="4">
												<value
													id="tl${x}"
													detailed="false"
													scolor="(((${i} ieq 0) or (:cbe_${ch})) and (:pe${x} igt 0)) ? 'threshold' : 'threshold_inactive'"
													bg.bright="(((${i} ieq 0) or (:cbe_${ch})) and (:pe${x} igt 0)) ? 1 : :const_bg_darken"
													bright="(((${i} ieq 0) or (:cbe_${ch})) and (:pe${x} igt 0)) ? 1 : :const_bg_darken"/>
												<value
													id="gl${x}"
													detailed="false"
													scolor="(((${i} ieq 0) or (:cbe_${ch})) and (:pe${x} igt 0)) ? 'threshold' : 'threshold_inactive'"
													bg.bright="(((${i} ieq 0) or (:cbe_${ch})) and (:pe${x} igt 0)) ? 1 : :const_bg_darken"
													bright="(((${i} ieq 0) or (:cbe_${ch})) and (:pe${x} igt 0)) ? 1 : :const_bg_darken"/>
												<value
													id="kn${x}"
													detailed="false"
													scolor="(((${i} ieq 0) or (:cbe_${ch})) and (:pe${x} igt 0)) ? 'threshold' : 'threshold_inactive'"
													bg.bright="(((${i} ieq 0) or (:cbe_${ch})) and (:pe${x} igt 0)) ? 1 : :const_bg_darken"
													bright="(((${i} ieq 0) or (:cbe_${ch})) and (:pe${x} igt 0)) ? 1 : :const_bg_darken"/>
												<value
													id="al${x}"
													detailed="false"
													scolor="(((${i} ieq 0) or (:cbe_${ch})) and (:ae${x} igt 0)) ? 'attack_1' : 'attack_inactive'"
													bright="(((${i} ieq 0) or (:cbe_${ch})) and (:ae${x} igt 0)) ? 1 : :const_bg_darken"
													bg.bright="(((${i} ieq 0) or (:cbe_${ch})) and (:ae${x} igt 0)) ? 1 : :const_bg_darken"/>
												<value
													id="at${x}"
													detailed="false"
													scolor="(((${i} ieq 0) or (:cbe_${ch})) and (:ae${x} igt 0)) ? 'attack_1' : 'attack_inactive'"
													bright="(((${i} ieq 0) or (:cbe_${ch})) and (:ae${x} igt 0)) ? 1 : :const_bg_darken"
													bg.bright="(((${i} ieq 0) or (:cbe_${ch})) and (:ae${x} igt 0)) ? 1 : :const_bg_darken"/>
												<value
													id="rl${x}"
													detailed="false"
													scolor="(((${i} ieq 0) or (:cbe_${ch})) and (:re${x} igt 0)) ? 'release_2' : 'release_inactive'"
													bright="(((${i} ieq 0) or (:cbe_${ch})) and (:re${x} igt 0)) ? 1 : :const_bg_darken"
													bg.bright="(((${i} ieq 0) or (:cbe_${ch})) and (:re${x} igt 0)) ? 1 : :const_bg_darken"/>
												<value
													id="rt${x}"
													detailed="false"
													scolor="(((${i} ieq 0) or (:cbe_${ch})) and (:re${x} igt 0)) ? 'release_2' : 'release_inactive'"
													bright="(((${i} ieq 0) or (:cbe_${ch})) and (:re${x} igt 0)) ? 1 : :const_bg_darken"
													bg.bright="(((${i} ieq 0) or (:cbe_${ch})) and (:re${x} igt 0)) ? 1 : :const_bg_darken"/>
											</ui:with>
										</ui:for>
									</grid>

								</vbox>
							</cell>

							<!-- Graph -->
							<vbox>
								<void bg.color="bg" height="4" vreduce="true"/>

								<group ui:inject="GraphGroup" ipadding="0" expand="true" fill="true" text.show="false" hmin="301">
									<ui:eval id="bvisl" value="(:i > 0) ? ':cbe_' scat :i scat 'l' : 'true'"/>
									<ui:eval id="bvisr" value="(:i > 0) ? ':cbe_' scat :i scat 'r' : 'true'"/>
									<graph width.min="256" height.min="256" expand="false">
										<origin hpos="-1" vpos="-1" visible="false"/>

										<!-- Gray grid -->
										<ui:for id="g" first="-60" last="12" step="24">
											<marker v="${g} db" color="graph_alt_1"/>
											<marker v="${g} db" ox="1" oy="0" color="graph_alt_1"/>
										</ui:for>

										<!-- Yellow grid -->
										<ui:for id="g" first="-48" last="-24" step="24">
											<marker v="${g} db" color="graph_sec"/>
											<marker v="${g} db" ox="1" oy="0" color="graph_sec"/>
										</ui:for>

										<!-- Axes and boundaries -->
										<marker v="1" ox="1" oy="0" dv="1" dx=":_a_width" dy=":_a_height" color="graph_alt_1" width="2" smooth="true"/>
										<marker v="24 db" color="graph_alt_1" visibility="false"/>
										<marker v="24 db" ox="1" oy="0" color="graph_alt_1" visibility="false"/>
										<axis min="-72 db" max="24 db" color="graph_prim" angle="0.0" log="true" visibility="false"/>
										<axis min="-72 db" max="24 db" color="graph_prim" angle="0.5" log="true" visibility="false"/>

										<!-- 0 dB markers -->
										<marker v="0 db" ox="0" oy="1" width="2" color="graph_prim"/>
										<marker v="0 db" ox="1" oy="0" width="2" color="graph_prim"/>

										<!-- Meshes -->
										<mesh id="cmg_${i}l" width="2" color="left" smooth="true" visibility="${bvisl} and :pe_${i}l and :cmv_${i}l"/>
										<mesh id="cmg_${i}r" width="2" color="right" smooth="true" visibility="${bvisr} and :pe_${i}r and :cmv_${i}r"/>
										<mesh id="ccg_${i}l" width="3" color="left" smooth="true" visibility="${bvisl} and :pe_${i}l "/>
										<mesh id="ccg_${i}r" width="3" color="right" smooth="true" visibility="${bvisr} and :pe_${i}r "/>

										<!-- Markers -->
										<ui:for id="c" first="0" last="3">
											<ui:set id="x" value="${c}_${i}"/>
											<marker id="al${x}l" editable="true" width="2" pointer="hsize" color="attack_1" hcolor="attack_1" smooth="true" visibility="${bvisl} and :pe_${i}l and :cmv_${i}l and :ae${x}l"/>
											<text x=":al${x}l" y="24 db" text="graph.values.idL_eft" text:id="${c}" color="attack_1" halign="-1" valign="-1" visibility="${bvisl} and :pe_${i}l and :cmv_${i}l and :ae${x}l"/>
											<marker id="al${x}r" editable="true" width="2" pointer="hsize" color="attack_2" hcolor="attack_2" smooth="true" visibility="${bvisr} and :pe_${i}r and :cmv_${i}r and :ae${x}r"/>
											<text x=":al${x}r" y="24 db" text="graph.values.idR_ight" text:id="${c}" color="attack_2" halign="-1" valign="-1" visibility="${bvisr} and :pe_${i}r and :cmv_${i}r and :ae${x}r"/>
										</ui:for>
										<ui:for id="c" first="0" last="3">
											<ui:set id="x" value="${c}_${i}"/>
											<marker id="rl${x}l" editable="true" width="2" pointer="hsize" color="release_1" hcolor="release_1" smooth="true" visibility="${bvisl} and :pe_${i}l and :cmv_${i}l and :re${x}l"/>
											<text x=":rl${x}l" y="-72 db" text="graph.values.idL_eft" text:id="${c}" color="release_1" halign="-1" valign="1" visibility="${bvisl} and :pe_${i}l and :cmv_${i}l and :re${x}l"/>

											<marker id="rl${x}r" editable="true" width="2" pointer="hsize" color="release_2" hcolor="release_2" smooth="true" visibility="${bvisr} and :pe_${i}r and :cmv_${i}r and :re${x}r"/>
											<text x=":rl${x}r" y="-72 db" text="graph.values.idR_ight" text:id="${c}" color="release_2" halign="-1" valign="1" visibility="${bvisr} and :pe_${i}r and :cmv_${i}r and :re${x}r"/>
										</ui:for>

										<!-- Dots -->
										<ui:for id="c" first="0" last="3">
											<ui:set id="x" value="${c}_${i}"/>
											<dot x.id="tl${x}l" y.id="gl${x}l" z.id="kn${x}l" x.editable="true" y.editable="true" z.editable="true" color="left" hover.color="left" bcolor="left" hover.bcolor="left" pointer="drag" visibility="${bvisl} and :pe_${i}l and :pe${x}l"/>
											<dot x.id="tl${x}r" y.id="gl${x}r" z.id="kn${x}r" x.editable="true" y.editable="true" z.editable="true" color="right" hover.color="right" bcolor="right" hover.bcolor="right" pointer="drag" visibility="${bvisr} and :pe_${i}r and :pe${x}r"/>
										</ui:for>
										<ui:for id="c" first="0" last="3">
											<ui:set id="x" value="${c}_${i}"/>
											<text x=":tl${x}l" y=":gl${x}l" text="graph.values.idL_eft" text:id="${c}" color="left" halign="-1" valign="1" visibility="${bvisl} and :pe_${i}l and :pe${x}l"/>
											<text x=":tl${x}r" y=":gl${x}r" text="graph.values.idR_ight" text:id="${c}" color="right" halign="-1" valign="1" visibility="${bvisr} and :pe_${i}r and :pe${x}r"/>
										</ui:for>

										<dot x.id="elm_${i}l" y.id="clm_${i}l" color="left" bcolor="left" visibility="${bvisl} and :pe_${i}l"/>
										<dot x.id="elm_${i}r" y.id="clm_${i}r" color="right" bcolor="right" visibility="${bvisr} and :pe_${i}r"/>

										<!-- Text -->
										<text x="0 db" y="0 db" text="0" halign="1" valign="1"/>
										<ui:attributes x="0 db" halign="1" valign="-1">
											<text y="24 db" text="graph.units.db"/>
											<text y="12 db" text="+12"/>
											<text y="-12 db" text="-12"/>
											<text y="-24 db" text="-24"/>
											<text y="-36 db" text="-36"/>
											<text y="-48 db" text="-48"/>
											<text y="-60 db" text="-60"/>
											<text y="-72 db" text="graph.axis.out" valign="1"/>
										</ui:attributes>
										<ui:attributes y="0 db" halign="-1" valign="1">
											<text x="24 db" text="graph.units.db"/>
											<text x="12 db" text="+12"/>
											<text x="-12 db" text="-12"/>
											<text x="-24 db" text="-24"/>
											<text x="-36 db" text="-36"/>
											<text x="-48 db" text="-48"/>
											<text x="-60 db" text="-60"/>
											<text x="-72 db" text="graph.axis.in" halign="1"/>
										</ui:attributes>
									</graph>
								</group>
							</vbox>

							<!-- Meters -->
							<vbox>
								<void bg.color="bg" height="4" vreduce="true"/>
								<label text="labels.gain_" bg.color="bg_schema" pad.v="4"/>
								<ledmeter vexpand="true" height.min="256" angle="1">
									<ledchannel id="rlm_${i}l" min="-72 db" max="24 db" log="true" balance="0 db" balance.visibility="true" type="peak" value.color="bright_blue"/>
									<ledchannel id="rlm_${i}r" min="-72 db" max="24 db" log="true" balance="0 db" balance.visibility="true" type="peak" value.color="bright_blue"/>
								</ledmeter>
							</vbox>

							<!-- Additional controls -->
							<cell cols="2">
								<grid rows="5" cols="11" bg.color="bg_schema">
									<cell cols="11">
										<hbox>
											<ui:attributes bg.color="bg_schema" bg.bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken">
												<hbox bg.color="bg_schema" spacing="6">
													<ui:with pad.v="4">
														<button id="pe_${i}l" text="labels.chan.left_on" ui:inject="Button_left_8" hfill="true" height="19" pad.l="6"/>
														<button id="bs_${i}l" text="labels.chan.S_olo" ui:inject="Button_green_8" hfill="true" height="19"/>
														<button id="bm_${i}l" text="labels.chan.M_ute" ui:inject="Button_red_8" hfill="true" pad.r="6" height="19"/>

														<button id="pe_${i}r" text="labels.chan.right_on" ui:inject="Button_right_8" hfill="true" height="19" pad.l="6"/>
														<button id="bs_${i}r" text="labels.chan.S_olo" ui:inject="Button_green_8" hfill="true" height="19"/>
														<button id="bm_${i}r" text="labels.chan.M_ute" ui:inject="Button_red_8" hfill="true" pad.r="6" height="19"/>
														<void hexpand="true"/>
													</ui:with>
												</hbox>
											</ui:attributes>
											<vsep bg.color="bg" pad.h="2" hreduce="true"/>
											<ui:attributes bg.color="bg_schema" bg.bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken">
												<hbox spacing="4" vexpand="false" bg.color="bg_schema" pad.h="6" pad.b="4" pad.t="4">
													<void hexpand="true"/>
													<button id="cmv_${i}l" height="22" width="48" text="labels.chan.left" ui:inject="Button_left"/>
													<button id="cmv_${i}r" height="22" width="48" text="labels.chan.right" ui:inject="Button_right"/>
												</hbox>
											</ui:attributes>
										</hbox>
									</cell>
									<cell cols="11"><hsep bg.color="bg" pad.v="2" vreduce="true"/></cell>

									<label text="labels.ratio_low" pad.h="6" pad.v="4" bg.color="bg_schema" bg.bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken"/>
									<cell rows="3"><vsep bg.color="bg" pad.h="2" hreduce="true"/></cell>
									<label text="labels.ratio_high" pad.h="6" pad.v="4" bg.color="bg_schema" bg.bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken"/>
									<cell rows="3"><vsep bg.color="bg" pad.h="2" hreduce="true"/></cell>
									<label text="labels.makeup" pad.h="6" pad.v="4" bg.color="bg_schema" bg.bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken"/>
									<cell rows="3"><vsep bg.color="bg" pad.h="2" hreduce="true"/></cell>
									<label text="labels.attack" pad.h="6" pad.v="4" bg.color="bg_schema" bg.bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken"/>
									<cell rows="3"><vsep bg.color="bg" pad.h="2" hreduce="true"/></cell>
									<label text="labels.release" pad.h="6" pad.v="4" bg.color="bg_schema" bg.bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken"/>
									<cell rows="3"><vsep bg.color="bg" pad.h="2" hreduce="true"/></cell>
									<label text="labels.hold" pad.h="6" pad.v="4" bg.color="bg_schema" bg.bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken"/>

									<ui:attributes bg.color="bg_schema" bg.bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${ch}) ?  1 : :const_bg_darken">
										<ui:with pad.h="6" pad.v="4">
											<knob id="llr_${ch}" size="20" scolor="((${i} ieq 0) or :cbe_${ch}) ?  'cycle' : 'cycle_inactive'" scolor.hue=":hue_${ch}"/>
											<knob id="hlr_${ch}" size="20" scolor="((${i} ieq 0) or :cbe_${ch}) ?  'cycle' : 'cycle_inactive'" scolor.hue=":hue_${ch}"/>
											<knob id="mk_${ch}" size="20" scolor="((${i} ieq 0) or :cbe_${ch}) ?  'cycle' : 'cycle_inactive'" scolor.hue=":hue_${ch}"/>
											<knob id="atd_${ch}" size="20" scolor="((${i} ieq 0) or :cbe_${ch}) ?  'attack' : 'attack_inactive'"/>
											<knob id="rtd_${ch}" size="20" scolor="((${i} ieq 0) or :cbe_${ch}) ?  'release' : 'release_inactive'"/>
											<knob id="ht_${ch}" size="20" scolor="((${i} ieq 0) or :cbe_${ch}) ?  'cycle' : 'cycle_inactive'" scolor.hue=":hue_${ch}"/>

											<value id="llr_${ch}" same.line="true"/>
											<value id="hlr_${ch}" same.line="true"/>
											<value id="mk_${ch}" same.line="true" wmin="48"/>
											<value id="atd_${ch}" same.line="true" wmin="46"/>
											<value id="rtd_${ch}" same.line="true" wmin="46"/>
											<value id="ht_${ch}" same.line="true" wmin="46"/>
										</ui:with>
									</ui:attributes>
								</grid>
							</cell>
						</grid>
					</hbox>
				</ui:for>
			</cgroup>
		</hbox>
	</vbox>
</plugin>
