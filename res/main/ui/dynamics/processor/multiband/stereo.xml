<plugin resizable="true">
	<vbox spacing="4">
		<grid rows="2" cols="5" vspacing="4" hspacing="4" expand="true">

			<group ui:inject="GraphGroup" ipadding="0" expand="true" fill="true" text="labels.graphs.spectrum">
				<graph width.min="716" height.min="320" expand="true" fill="true">
					<origin hpos="-1" vpos="-1" visible="false"/>

					<!-- Additional grid -->
					<ui:with color="graph_alt_1">
						<ui:for id="f" first="20" last="90" step="10">
							<marker v="${:f}"/>
							<marker v="${:f*10}"/>
							<marker v="${:f*100}"/>
						</ui:for>
						<marker v="20000"/>
						<ui:with ox="1" oy="0">
							<marker v="+12 db"/>
							<marker v="-12 db"/>
							<marker v="-36 db"/>
							<marker v="-60 db"/>

							<ui:for id="g" first="-42" last="6" step="12">
								<marker v="${g} db" visibility=":zoom le -9 db"/>
							</ui:for>
							<ui:for id="g" first="-21" last="3" step="6">
								<marker v="${g} db" visibility=":zoom le -15 db"/>
							</ui:for>
						</ui:with>
					</ui:with>

					<!-- Secondary grid -->
					<ui:with color="graph_sec">
						<marker v="100"/>
						<marker v="1000"/>
						<marker v="10000"/>
						<marker value="0 db" ox="1" oy="0"/>
						<marker value="-24 db" ox="1" oy="0"/>
						<marker value="-48 db" ox="1" oy="0"/>
					</ui:with>

					<!-- Band markers -->
					<ui:with
						width="2"
						fill="0.5"
						color.a="0.2"
						hcolor.a="0.8"
						lcolor.a="0.8"
						hlcolor.a="0.8"
						rcolor.a="0.8"
						hrcolor.a="0.8"
						color="graph_marker_cycle"
						hcolor="graph_marker_cycle"
						lcolor="graph_marker_cycle"
						hlcolor="graph_marker_cycle"
						rcolor="graph_marker_cycle"
						hrcolor="graph_marker_cycle">
						<marker v="10" color.hue=":hue_0" hcolor.hue=":hue_0" rborder="16" rcolor.hue=":hue_0" hrborder="16" hrcolor.hue=":hue_0"/>
						<marker id="fre_0" color.hue=":hue_0" hcolor.hue=":hue_0" lborder="16" lcolor.hue=":hue_0" hlborder="16" hlcolor.hue=":hue_0"/>
						<ui:for id="i" first="1" last="7">
							<marker id="sf_${i}" ui:id="split_marker_${i}" visibility=":cbe_${i}" editable="true" color.hue=":hue_${i}" hcolor.hue=":hue_${i}" rborder="16" rcolor.hue=":hue_${i}" hrborder="16" hrcolor.hue=":hue_${i}" pointer="hsize"/>
							<marker id="fre_${i}" visibility=":cbe_${i}" color.hue=":hue_${i}" hcolor.hue=":hue_${i}" lborder="16" lcolor.hue=":hue_${i}" hlborder="16" hlcolor.hue=":hue_${i}"/>
						</ui:for>
					</ui:with>

					<!-- Meshes -->
					<mesh id="bfc_0" width="2" fill="true" smooth="true" color="graph_mesh_cycle" color.hue=":hue_0" fcolor="graph_mesh_cycle" fcolor.hue=":hue_0" fcolor.a="0.9" visibility=":flt"/>

					<ui:for id="i" first="1" last="7">
						<mesh id="bfc_${i}" width="2" fill="true" smooth="true" color="graph_mesh_cycle" color.hue=":hue_${i}" fcolor="graph_mesh_cycle" fcolor.hue=":hue_${i}" fcolor.a="0.9" visibility=":flt and :cbe_${i}"/>
					</ui:for>
					<mesh id="ifg_l" oy=":_ui_zoomable_spectrum_graph ? 1 : 3" width="0" color="left_in" color.a="0.8" fcolor.a="0.8" fill="true" fcolor="left_in" visibility=":ife_l"/>
					<mesh id="ifg_r" oy=":_ui_zoomable_spectrum_graph ? 1 : 3" width="0" color="right_in" color.a="0.8" fcolor.a="0.8" fill="true" fcolor="right_in" visibility=":ife_r"/>
					<mesh id="ofg_l" oy=":_ui_zoomable_spectrum_graph ? 1 : 3" width="2" color="left" visibility=":ofe_l"/>
					<mesh id="ofg_r" oy=":_ui_zoomable_spectrum_graph ? 1 : 3" width="2" color="right" visibility=":ofe_r"/>

					<mesh id="ag_l" width="3" color="bright_cyan" smooth="true" visibility="!:ssplit"/>
					<mesh id="ag_l" width="3" color="left" smooth="true" visibility=":ssplit"/>
					<mesh id="ag_r" width="3" color="right" smooth="true" visibility=":ssplit"/>

					<!-- Boundaries -->
					<marker v="1" ox="2" oy="0" color="graph_prim" visibility="false"/>
					<marker v="24000" color="graph_prim" visibility="false"/>

					<!-- Axis -->
					<axis min="10" max="24000" angle="0.0" log="true" visibility="false"/>
					<axis min="-72 db / (:zoom ** 3)" max="24 db * :zoom" color="graph_prim" angle="0.5" log="true"/>
					<axis min="-1" max="1" visibility="false" angle="0.5"/>
					<axis min="-72 db" max="24 db" color="graph_prim" angle="0.5" log="true" visibility="false"/>

					<!-- Text -->
					<ui:with ox="0" oy="2" y="0" halign="1" valign="1">
						<text x="10" text="graph.units.hz"/>
						<text x="20" text="20"/>
						<text x="30" text="30"/>
						<text x="50" text="50"/>
						<text x="100" text="100"/>
						<text x="200" text="200"/>
						<text x="300" text="300"/>
						<text x="500" text="500"/>
						<text x="1000" text="graph.values.x_k" text:value="1"/>
						<text x="2000" text="graph.values.x_k" text:value="2"/>
						<text x="3000" text="graph.values.x_k" text:value="3"/>
						<text x="5000" text="graph.values.x_k" text:value="5"/>
						<text x="10000" text="graph.values.x_k" text:value="10"/>
						<text x="20000" text="graph.values.x_k" text:value="20"/>
					</ui:with>

					<ui:with x="10" halign="1" valign="1">
						<ui:for id="g" first="-60" last="12" step="12">
							<text y="${g} db" text="${g}"/>
						</ui:for>
						<text y="0 db" ox="0" oy="2" text="graph.units.db" valign="-1"/>
						<ui:for id="g" first="-42" last="6" step="12">
							<text y="${g} db" text="${g}" visibility=":zoom le -9 db"/>
						</ui:for>
						<ui:for id="g" first="-21" last="3" step="6">
							<text y="${g} db" text="${g}" visibility=":zoom le -15 db"/>
						</ui:for>
					</ui:with>

					<ui:for id="i" first="1" last="7">
						<ui:with ox="0" oy="2" y="1" valign="-1" color="graph_marker_cycle" visibility="false" pad.h="4" font.bold="true">
							<text ui:id="split_note_${i}" x=":sf_${i}" halign="(:sf_${i} lt 500) ? 1 : -1" text.halign="(:sf_${i} lt 500) ? -1 : 1" color.hue="${(:i-1) * 0.125}"/>
						</ui:with>
					</ui:for>
				</graph>
			</group>
			<!-- zoom -->
			<cell rows="2">
				<vbox vexpand="true" bg.color="bg_schema">
					<label font.name="lsp-icons" font.size="12" font.antialias="true" text="icons.main.zoom" color="text_icon" pad.b="4" pad.t="4"/>
					<fader id="zoom" angle="1" vexpand="true" bg.inherit="true" flat="true"/>
					<value id="zoom" width="40"/>
				</vbox>
			</cell>
			<!-- meter in -->
			<cell rows="2">
				<vbox vexpand="true" bg.color="bg_schema">
					<label text="labels.chan.in" pad.b="3" pad.t="3"/>
					<ledmeter vexpand="true" angle="1">
						<ledchannel id="ilm_l" min="-72 db" max="12 db" log="true" type="rms_peak" peak.visibility="true" value.color="left_in"/>
						<ledchannel id="ilm_r" min="-72 db" max="12 db" log="true" type="rms_peak" peak.visibility="true" value.color="right_in"/>
					</ledmeter>
				</vbox>
			</cell>

			<!-- meter out -->
			<cell rows="2">
				<vbox vexpand="true" bg.color="bg_schema">
					<label text="labels.chan.out" pad.b="3" pad.t="3"/>
					<ledmeter vexpand="true" angle="1">
						<ledchannel id="olm_l" min="-72 db" max="12 db" log="true" type="rms_peak" peak.visibility="true" value.color="left"/>
						<ledchannel id="olm_r" min="-72 db" max="12 db" log="true" type="rms_peak" peak.visibility="true" value.color="right"/>
					</ledmeter>
				</vbox>
			</cell>

			<!-- signal -->
			<cell rows="2">
				<vbox spacing="4">
					<group text="groups.signal" expand="true">
						<grid rows="5" cols="2" hspacing="4">
							<knob id="g_in" pad.r="4"/>
							<vbox vfill="false">
								<label text="labels.input" halign="0"/>
								<value id="g_in" sline="true" halign="0"/>
							</vbox>

							<knob id="g_out" pad.r="4"/>
							<vbox vfill="false">
								<label text="labels.output" expand="true" halign="0"/>
								<value id="g_out" width.min="50" sline="true" halign="0"/>
							</vbox>

							<knob id="g_dry" scolor="dry" pad.r="4"/>
							<vbox vfill="false">
								<label text="labels.signal.dry" halign="0"/>
								<value id="g_dry" width.min="50" sline="true" halign="0"/>
							</vbox>

							<knob id="g_wet" scolor="wet" pad.r="4"/>
							<vbox vfill="false">
								<label text="labels.signal.wet" halign="0"/>
								<value id="g_wet" width.min="50" sline="true" halign="0"/>
							</vbox>
							
							<knob id="drywet" scolor="drywet" pad.r="4"/>
							<vbox vfill="false">
								<label text="labels.signal.drywet" halign="0"/>
								<value id="drywet" width.min="50" sline="true" halign="0"/>
							</vbox>
						</grid>
					</group>

					<!-- Analysis -->
					<group text="groups.analysis" expand="true" ipadding="0">
						<vbox>
							<grid rows="4" cols="2">
								<align halign="-1" pad.t="4" pad.l="6">
									<label text="labels.fft.fft_in"/>
								</align>
								<hbox spacing="4" pad.v="4" pad.h="6" hfill="false">
									<button id="ife_l" text="labels.chan.L_eft" size="19" ui:inject="Button_left_8"/>
									<button id="ife_r" text="labels.chan.R_ight" size="19" ui:inject="Button_right_8"/>
								</hbox>

								<cell cols="2"><hsep pad.v="2" bg.color="bg" vreduce="true"/></cell>

								<align halign="-1" pad.t="4" pad.l="6">
									<label text="labels.fft.fft_out" halign="0"/>
								</align>
								<hbox spacing="4" pad.v="4" pad.h="6" hfill="false">
									<button id="ofe_l" text="labels.chan.L_eft" size="19" ui:inject="Button_left_8"/>
									<button id="ofe_r" text="labels.chan.R_ight" size="19" ui:inject="Button_right_8"/>
								</hbox>

								<cell cols="2"><hsep pad.v="2" bg.color="bg" vreduce="true"/></cell>
							</grid>

							<grid rows="2" cols="2" transpose="false" expand="true" hspacing="4">
								<knob id="react" size="20" pad.r="4" pad.l="6"/>
								<vbox vfill="false" pad.r="6">
									<label text="labels.metering.reactivity" halign="0"/>
									<value id="react" width.min="50" sline="true" halign="0"/>
								</vbox>

								<knob id="shift" size="20" pad.r="4" pad.l="6"/>
								<vbox vfill="false" pad.r="6">
									<label text="labels.metering.shift" halign="0"/>
									<value id="shift" width.min="50" sline="true" halign="0"/>
								</vbox>
							</grid>
						</vbox>
					</group>
				</vbox>
			</cell>

			<!-- bottom line -->
			<hbox vreduce="true">
				<align halign="-1" vreduce="true">
					<hbox spacing="4" vreduce="true" bg.color="bg_schema" pad.h="6">
						<label text="labels.mode:"/>
						<combo id="mode" pad.r="8" pad.v="4"/>
						<label text="labels.sc_boost:"/>
						<combo id="envb" pad.r="8"/>
						<button id="flt" text="labels.filters" size="22" ui:inject="Button_cyan"/>
					</hbox>
				</align>
				<vsep pad.h="2" bg.color="bg" reduce="true"/>
				<hbox bg.color="bg_schema" hreduce="true" pad.h="6">
					<button id="ssplit" text="labels.stereo_split" size="22" ui:inject="Button_blue"/>
				</hbox>
			</hbox>
		</grid>

		<!-- down part -->
		<hbox>

			<cgroup id="bsel" embed.h=":bsel ilt 2" embed.b=":bsel ilt 2" width.min="932" height.min="454">
				<!-- Main part -->
				<grid rows="11" cols="25" transpose="true">
					<!-- Labels -->
					<label text="labels.band" pad.v="4" bg.color="bg_schema" hreduce="true"/>
					<vbox pad.v="4">
						<label text="labels.range"/>
						<label text="labels.units.:hz"/>
					</vbox>
					<label text="labels.controls" pad.v="4" bg.color="bg_schema"/>
					<cell rows="2" pad.v="4" hreduce="true" pad.h="6">
						<label text="labels.sc_preamp_makeup:db_db"/>
					</cell>
					<cell rows="2" pad.v="4">
						<label text="labels.attack_release:ms_ms"/>
					</cell>
					<cell rows="2" pad.v="4">
						<label text="labels.ratio_low_high"/>
					</cell>
					<cell><hsep pad.v="2" bg.color="bg" vreduce="true"/></cell>
					<cell rows="6" pad.v="4">
						<label text="labels.threshold:db"/>
					</cell>

					<!-- Bands -->
					<ui:for id="i" first="0" last="7">

						<!-- Column 1 -->
						<ui:if test=":i ieq 0">
							<!-- Separator -->
							<cell rows="11"><vsep pad.h="2" bg.color="bg" hreduce="true"/></cell>
							<ui:with bright="((${i} ieq 0) or :cbe_${i}) ? 1 : :const_bg_darken" bg.bright="((${i} ieq 0) or :cbe_${i}) ? 1.0 : :const_bg_darken">
								<cell cols="2" bg.color="bg_schema">
									<button text="labels.chan.num_id" text:id="${i}" value="1" editable="false" pointer="arrow" hfill="true" ui:inject="Button_ne_Cycle" height="19" pad.h="6" pad.v="4"/>
								</cell>
								<cell cols="2" fill="false">
									<vbox height.min="40">
										<label text="0"/>
										<value id="fre_${i}" width.min="30" sline="true" detailed="false"/>
									</vbox>
								</cell>
							</ui:with>
						</ui:if>

						<ui:if test=":i ine 0">
							<!-- Separator -->
							<cell rows="11"><vsep pad.h="2" bg.color="bg" hreduce="true"/></cell>
							<ui:with bright="((${i} ieq 0) or :cbe_${i}) ? 1 : :const_bg_darken" bg.bright="((${i} ieq 0) or :cbe_${i}) ? 1.0 : :const_bg_darken">
								<cell cols="2" bg.color="bg_schema">
									<button
										id="cbe_${i}"
										text="labels.chan.num_id"
										text:id="${i}"
										ui:inject="Button_Cycle"
										hfill="true"
										height="19"
										down.color.hue=":hue_${i}"
										down.hover.color.hue=":hue_${i}"
										text.down.color.hue=":hue_${i}"
										text.down.hover.color.hue=":hue_${i}"
										border.down.color.hue=":hue_${i}"
										border.down.hover.color.hue=":hue_${i}"
										pad.h="6"
										pad.v="4"/>
								</cell>
								<knob id="sf_${i}" size="16" ssize="3" pad.v="4" scolor="((${i} ieq 0) or :cbe_${i}) ? 'cycle' : 'cycle_inactive'" scolor.hue=":hue_${i}"/>
							</ui:with>
						</ui:if>
						<ui:with bright="((${i} ieq 0) or :cbe_${i}) ? 1 : :const_bg_darken" bg.bright="((${i} ieq 0) or :cbe_${i}) ? 1.0 : :const_bg_darken">
							<cell cols="2" pad.h="6" bg.color="bg_schema">
								<grid rows="2" cols="1" hspacing="4">
									<button
										id="pe_${i}"
										text="labels.chan.on"
										height="19"
										hfill="true"
										ui:inject="Button_Cycle"
										down.color.hue=":hue_${i}"
										down.hover.color.hue=":hue_${i}"
										text.down.color.hue=":hue_${i}"
										text.down.hover.color.hue=":hue_${i}"
										border.down.color.hue=":hue_${i}"
										border.down.hover.color.hue=":hue_${i}"
										pad.v="4"/>
									<hbox pad.b="4">
										<button id="bs_${i}" text="labels.chan.S_olo" height="19" hfill="true" ui:inject="Button_green_8"/>
										<button id="bm_${i}" text="labels.chan.M_ute" height="19" hfill="true" ui:inject="Button_red_8" pad.l="4"/>
										<button id="sce_${i}" text="labels.chan.Ext_ernal" height="19" hfill="true" ui:inject="Button_yellow_8" visibility="ex :sce_${i}" pad.l="4"/>
									</hbox>
								</grid>
							</cell>
							<knob id="scp_${i}" size="16" ssize="3" pad.t="4" scolor="((${i} ieq 0) or :cbe_${i}) ? 'cycle' : 'cycle_inactive'" scolor.hue=":hue_${i}"/>
							<value id="scp_${i}" pad.b="4" width.min="32" detailed="false"/>
							<knob id="atd_${i}" size="16" pad.t="4" ssize="3" scolor="((${i} ieq 0) or :cbe_${i}) ? 'cycle' : 'cycle_inactive'" scolor.hue=":hue_${i}"/>
							<value id="atd_${i}" pad.b="4" detailed="false"/>
							<knob id="llr_${i}" size="16" pad.t="4" ssize="3" scolor="((${i} ieq 0) or :cbe_${i}) ? 'cycle' : 'cycle_inactive'" scolor.hue=":hue_${i}"/>
							<value id="llr_${i}" pad.b="4" detailed="false"/>
						</ui:with>
						<!-- Separator -->
						<cell cols="2"><hsep pad.v="2" bg.color="bg" vreduce="true"/></cell>

						<!-- Threshold block -->
						<cell cols="2" transpose="true">
							<grid rows="7" cols="3">
								<ui:for id="c" first="0" last="3">
									<ui:if test=":c ine 1 and :c ine 3">
										<ui:set id="x" value="${c}_${i}"/>
										<ui:with bg.bright="(((${i} ieq 0) or (:cbe_${i})) and :pe${x} ine 0) ? 1 : :const_bg_darken" bright="(((${i} ieq 0) or (:cbe_${i})) and :pe${x} ine 0) ? 1 : :const_bg_darken">
											<button id="pe${x}" pad.t="4" pad.h="6" fill="true" height="10" text="labels.thr_eshold_num_id" text:id="${c}" ui:inject="Button_violet_6"/>
											<knob id="tl${x}" size="16" pad.t="4" ssize="3" scolor="(((${i} ieq 0) or (:cbe_${i})) and :pe${x} ine 0) ? 'cycle' : 'cycle_inactive'" scolor.hue=":hue_${i}"/>
											<value id="tl${x}" pad.b="4" detailed="false"/>
										</ui:with>
									</ui:if>
									<ui:if test=":c ieq 0"><hsep pad.v="2" bg.color="bg" vreduce="true"/></ui:if>
								</ui:for>

								<cell rows="7"><vsep pad.h="2" bg.color="bg" hreduce="true"/></cell>

								<ui:for id="c" first="0" last="3">
									<ui:if test=":c ine 0 and :c ine 2">
										<ui:set id="x" value="${c}_${i}"/>
										<ui:with bg.bright="(((${i} ieq 0) or (:cbe_${i})) and :pe${x} ine 0) ? 1 : :const_bg_darken" bright="(((${i} ieq 0) or (:cbe_${i})) and :pe${x} ine 0) ? 1 : :const_bg_darken">
											<button id="pe${x}" pad.t="4" pad.h="6" fill="true" height="10" text="labels.thr_eshold_num_id" text:id="${c}" ui:inject="Button_violet_6"/>
											<knob id="tl${x}" size="16" pad.t="4" ssize="3" scolor="(((${i} ieq 0) or (:cbe_${i})) and :pe${x} ine 0) ? 'cycle' : 'cycle_inactive'" scolor.hue=":hue_${i}"/>
											<value id="tl${x}" pad.b="4" detailed="false"/>
										</ui:with>
									</ui:if>
									<ui:if test=":c ieq 1"><hsep pad.v="2" bg.color="bg" vreduce="true"/></ui:if>
								</ui:for>
							</grid>
						</cell>
						<ui:with bright="((${i} ieq 0) or :cbe_${i}) ? 1 : :const_bg_darken" bg.bright="((${i} ieq 0) or :cbe_${i}) ? 1.0 : :const_bg_darken">
							<!-- Column 2 -->
							<ui:if test=":i ine 0">
								<vbox>
									<value id="sf_${i}" width.min="30" detailed="false" visibility=":cbe_${i}"/>
									<value id="fre_${i}" detailed="false"/>
									<label text="labels.chan.off" visibility="not :cbe_${i}"/>
								</vbox>
							</ui:if>
							<knob id="mk_${i}" size="16" pad.t="4" ssize="3" scolor="((${i} ieq 0) or :cbe_${i}) ? 'cycle' : 'cycle_inactive'" scolor.hue=":hue_${i}"/>
							<value id="mk_${i}" pad.b="4" width.min="32" detailed="false"/>
							<knob id="rtd_${i}" size="16" pad.t="4" ssize="3" scolor="((${i} ieq 0) or :cbe_${i}) ? 'cycle' : 'cycle_inactive'" scolor.hue=":hue_${i}" bg.color="bg_schema"/>
							<value id="rtd_${i}" size="16" pad.b="4" detailed="false" bg.color="bg_schema"/>
							<knob id="hlr_${i}" size="16" pad.t="4" ssize="3" scolor="((${i} ieq 0) or :cbe_${i}) ? 'cycle' : 'cycle_inactive'" scolor.hue=":hue_${i}" bg.color="bg_schema"/>
							<value id="hlr_${i}" size="16" pad.b="4" detailed="false" bg.color="bg_schema"/>

						</ui:with>
					</ui:for>
				</grid>

				<!-- Band settings -->
				<ui:for id="i" first="0" last="7">
					<grid rows="2" cols="4" spacing="4" bg.color="bg">
						<!-- Sidechain setup -->
						<cell rows="2">
							<vbox expand="false" bg.color="bg_schema">

								<grid rows="9" cols="3" transpose="true" bg.color="bg_schema">
									<cell cols="3">
										<void bg.color="bg" height="4" vreduce="true"/>
									</cell>

									<label text="labels.band"/>
									<ui:if test=":i ieq 0">
										<button text="labels.chan.active_num_id" text:id="${i}" value="1" editable="false" pointer="arrow" hfill="true" ui:inject="Button_ne_Cycle" height="19" pad.h="6" pad.v="4"/>
									</ui:if>

									<ui:if test=":i ine 0">
										<button
											id="cbe_${i}"
											text="labels.chan.active_num_id"
											text:id="${i}"
											ui:inject="Button_Cycle"
											hfill="true"
											height="19"
											pad.h="6"
											pad.v="4"
											down.color.hue=":hue_${i}"
											down.hover.color.hue=":hue_${i}"
											text.down.color.hue=":hue_${i}"
											text.down.hover.color.hue=":hue_${i}"
											border.down.color.hue=":hue_${i}"
											border.down.hover.color.hue=":hue_${i}"/>
									</ui:if>

									<!-- Sidechain -->
									<cell cols="3">
										<vbox vreduce="true">
											<void bg.color="bg" height="4"/>
											<align halign="-1" vreduce="true">
												<label text="labels.sidechain" pad.h="6" height.max="20" bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken" bg.color="bg_schema_name" bg.bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken"/>
											</align>
											<hsep vreduce="true"/>
										</vbox>
									</cell>

									<ui:attributes bg.color="bg_schema" bg.bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken">
										<vbox>
											<label text="labels.sc.preamp" pad.h="6" pad.v="4" vreduce="true"/>
											<knob id="scp_${i}" size="16" ssize="3" scolor="((${i} ieq 0) or :cbe_${i}) ?  'cycle' : 'cycle_inactive'" pad.t="4" scolor.hue=":hue_${i}"/>
											<value id="scp_${i}" sline="true" width.min="48"/>
										</vbox>
									</ui:attributes>

									<cell cols="3">
										<hsep pad.v="2" bg.color="bg" vreduce="true"/>
									</cell>

									<ui:attributes bg.color="bg_schema" bg.bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken">
										<vbox>
											<label text="labels.sc.reactivity" pad.h="6" pad.v="4" vreduce="true"/>
											<knob id="scr_${i}" size="16" ssize="3" scolor="((${i} ieq 0) or :cbe_${i}) ?  'cycle' : 'cycle_inactive'" pad.t="4" scolor.hue=":hue_${i}"/>
											<value id="scr_${i}" sline="true"/>
										</vbox>
									</ui:attributes>

									<cell cols="3">
										<hsep pad.v="2" bg.color="bg" vreduce="true"/>
									</cell>

									<ui:attributes bg.color="bg_schema" bg.bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken">
										<vbox>
											<label text="labels.sc.lookahead" pad.h="6" pad.v="4" vreduce="true"/>
											<knob id="sla_${i}" size="16" ssize="3" scolor="((${i} ieq 0) or :cbe_${i}) ?  'cycle' : 'cycle_inactive'" pad.t="4" scolor.hue=":hue_${i}"/>
											<value id="sla_${i}" sline="true"/>
										</vbox>
									</ui:attributes>

									<cell rows="2">
										<vsep bg.color="bg" pad.h="2" hreduce="true"/>
									</cell>

									<vsep bg.color="bg" pad.h="2" hreduce="true"/>
									<vsep bg.color="bg" pad.h="2" hreduce="true"/>
									<vsep bg.color="bg" pad.h="2" hreduce="true"/>

									<ui:attributes bg.bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken">
										<hbox fill="false" pad.h="6" pad.t="4">
											<label text="labels.range" pad.r="4"/>
											<label text="labels.units.:hz"/>
										</hbox>

										<ui:if test=":i ieq 0">
											<vbox width="78" pad.v="2" fill="false">
												<label text="0"/>
												<value id="fre_${i}" sline="true" detailed="false"/>
											</vbox>
										</ui:if>

										<ui:if test=":i ine 0">
											<hbox fill="false" pad.h="6">
												<knob id="sf_${i}" size="16" ssize="3" pad.v="4" scolor="((${i} ieq 0) or :cbe_${i}) ? 'cycle' : 'cycle_inactive'" scolor.hue=":hue_${i}"/>
												<vbox fill="false" pad.l="6">
													<value id="sf_${i}" width.min="32" detailed="false" visibility=":cbe_${i}"/>
													<value id="fre_${i}" detailed="false" width.min="32"/>
													<label text="labels.chan.off" width.min="32" visibility="not :cbe_${i}"/>
												</vbox>
											</hbox>
										</ui:if>
									</ui:attributes>

									<ui:attributes bg.color="bg_schema" bg.bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken">
										<vbox >
											<label text="labels.setup" pad.h="6" pad.t="4" fill="false" vreduce="true"/>

											<vbox fill="false" spacing="1">
												<ui:with pad.h="6" pad.b="4">
													<combo id="scm_${i}" fill="true" width.min="74"/>
													<combo id="scs_${i}" fill="true" visibility="!:ssplit"/>
													<combo id="sscs_${i}" fill="true" visibility=":ssplit"/>
													<button
														text="labels.chan.external_sc"
														id="sce_${i}"
														ui:inject="Button_Cycle"
														hfill="true"
														height="19"
														down.color.hue=":hue_${i}"
														down.hover.color.hue=":hue_${i}"
														text.down.color.hue=":hue_${i}"
														text.down.hover.color.hue=":hue_${i}"
														border.down.color.hue=":hue_${i}"
														border.down.hover.color.hue=":hue_${i}"
														visibility="ex :sce_${i}"/>
												</ui:with>
											</vbox>
										</vbox>
									</ui:attributes>

									<vbox bg.color="bg_schema">
										<button
											text="labels.flt.LCF"
											pad.h="6"
											id="sclc_${i}"
											ui:inject="Button_Cycle"
											hfill="true"
											height="19"
											down.color.hue=":hue_${i}"
											down.hover.color.hue=":hue_${i}"
											text.down.color.hue=":hue_${i}"
											text.down.hover.color.hue=":hue_${i}"
											border.down.color.hue=":hue_${i}"
											border.down.hover.color.hue=":hue_${i}"
											bright="((:sclc_${i} and :cbe_${i}) or (:sclc_${i} and :cbe_${i} ine 0)) ?  1 : :const_bg_darken"
											bg.bright="((:sclc_${i} and :cbe_${i}) or (:sclc_${i} and :cbe_${i} ine 0)) ?  1 : :const_bg_darken"/>
										<knob
											id="sclf_${i}"
											size="16"
											ssize="3"
											scolor="((:sclc_${i} and :cbe_${i}) or (:sclc_${i} and :cbe_${i} ine 0)) ? 'cycle' : 'cycle_inactive'"
											pad.v="4"
											pad.l="4"
											scolor.hue=":hue_${i}"
											bright="((:sclc_${i} and :cbe_${i}) or (:sclc_${i} and :cbe_${i} ine 0)) ?  1 : :const_bg_darken"
											bg.bright="((:sclc_${i} and :cbe_${i}) or (:sclc_${i} and :cbe_${i} ine 0)) ?  1 : :const_bg_darken"/>
										<value
											id="sclf_${i}"
											pad.h="6"
											bright="((:sclc_${i} and :cbe_${i}) or (:sclc_${i} and :cbe_${i} ine 0)) ?  1 : :const_bg_darken"
											bg.bright="((:sclc_${i} and :cbe_${i}) or (:sclc_${i} and :cbe_${i} ine 0)) ?  1 : :const_bg_darken"
											width.min="30"
											same.line="true"/>
									</vbox>
									<vbox bg.color="bg_schema">
										<button
											text="labels.flt.HCF"
											pad.h="6"
											id="schc_${i}"
											ui:inject="Button_Cycle"
											hfill="true"
											height="19"
											down.color.hue=":hue_${i}"
											down.hover.color.hue=":hue_${i}"
											text.down.color.hue=":hue_${i}"
											text.down.hover.color.hue=":hue_${i}"
											border.down.color.hue=":hue_${i}"
											border.down.hover.color.hue=":hue_${i}"
											bright="((:schc_${i} and :cbe_${i}) or (:schc_${i} and :cbe_${i} ine 0)) ?  1 : :const_bg_darken"
											bg.bright="((:schc_${i} and :cbe_${i}) or (:schc_${i} and :cbe_${i} ine 0)) ? 1 : :const_bg_darken"/>
										<knob
											id="schf_${i}"
											size="16"
											ssize="3"
											scolor="((:schc_${i} and :cbe_${i}) or (:schc_${i} and :cbe_${i} ine 0)) ? 'cycle' : 'cycle_inactive'"
											pad.v="4"
											pad.l="4"
											scolor.hue=":hue_${i}"
											bright="((:schc_${i} and :cbe_${i}) or (:schc_${i} and :cbe_${i} ine 0)) ?  1 : :const_bg_darken"
											bg.bright="((:schc_${i} and :cbe_${i}) or (:schc_${i} and :cbe_${i} ine 0)) ? 1 : :const_bg_darken"/>
										<value
											id="schf_${i}"
											pad.h="6"
											bg.bright="((:schc_${i} and :cbe_${i}) or (:schc_${i} and :cbe_${i} ine 0)) ? 1 : :const_bg_darken"
											bright="((:schc_${i} and :cbe_${i}) or (:schc_${i} and :cbe_${i} ine 0)) ? 1 : :const_bg_darken"
											width.min="30"
											same.line="true"/>
									</vbox>
								</grid>
							</vbox>

						</cell>
						<cell rows="2">
							<vbox expand="true" bg.color="bg_schema">

								<void bg.color="bg" height="4" vreduce="true"/>

								<align halign="-1" vreduce="true">
									<label text="labels.plug.dyna_processor" pad.h="6" height.max="20" bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken" bg.color="bg_schema_name" bg.bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken"/>
								</align>
								<hsep vreduce="true"/>

								<!-- Processor settings -->

								<grid rows="13" cols="13" spacing="0" bg.color="bg_schema">
									<label text="labels.specials.num" pad.h="6" pad.v="4" reduce="true" bg.bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken"/>
									<cell rows="13"><vsep bg.color="bg" pad.h="2" hreduce="true"/></cell>
									<label text="labels.enable" pad.h="6" pad.v="4" reduce="true" bg.bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken"/>
									<cell rows="13"><vsep bg.color="bg" pad.h="2" hreduce="true"/></cell>
									<label text="labels.thresh_old:db" pad.h="6" pad.v="4" bg.bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken"/>
									<label text="labels.gain:db" pad.h="6" pad.v="4" bg.bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken"/>
									<label text="labels.knee_:db" pad.h="6" pad.v="4" bg.bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken"/>
									<cell rows="13"><vsep bg.color="bg" pad.h="2" hreduce="true"/></cell>
									<cell cols="2"><label text="labels.attack:db_ms" pad.h="6" pad.v="4" bg.bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken"/></cell>
									<cell rows="13"><vsep bg.color="bg" pad.h="2" hreduce="true"/></cell>
									<cell cols="2"><label text="labels.release:db_ms" pad.h="6" pad.v="4" bg.bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken"/></cell>

									<ui:for id="c" first="0" last="3">
										<ui:set id="x" value="${c}_${i}"/>
										<hsep bg.color="bg" pad.v="2" vreduce="true"/>
										<hsep bg.color="bg" pad.v="2" vreduce="true"/>
										<cell cols="3"><hsep bg.color="bg" pad.v="2" vreduce="true"/></cell>
										<cell cols="2"><hsep bg.color="bg" pad.v="2" vreduce="true"/></cell>
										<cell cols="2"><hsep bg.color="bg" pad.v="2" vreduce="true"/></cell>

										<cell rows="2" hreduce="true" pad.h="4" wmin="19"><label text="${c}" bg.bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken"/></cell>
										<cell rows="2">
											<vbox fill="false" pad="6" spacing="4" bg.bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken">
												<ui:with bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken">
													<button id="pe${x}" width.min="43" fill="true" height="10" text="labels.threshold" ui:inject="Button_violet_6"/>
													<button id="ae${x}" width.min="43" fill="true" height="10" text="labels.attack" ui:inject="Button_magenta_6"/>
													<button id="re${x}" width.min="43" fill="true" height="10" text="labels.release" ui:inject="Button_green_6"/>
												</ui:with>
											</vbox>
										</cell>
										<ui:with pad.h="6" pad.v="4" size="20">
											<knob
												id="tl${x}"
												scolor="(((${i} ieq 0) or (:cbe_${i})) and (:pe${x} igt 0)) ? 'threshold' : 'threshold_inactive'"
												bg.bright="(((${i} ieq 0) or (:cbe_${i})) and (:pe${x} igt 0)) ? 1 : :const_bg_darken"
												bright="(((${i} ieq 0) or (:cbe_${i})) and (:pe${x} igt 0)) ? 1 : :const_bg_darken"/>
											<knob
												id="gl${x}"
												scolor="(((${i} ieq 0) or (:cbe_${i})) and (:pe${x} igt 0)) ? 'kscale' : 'kscale_inactive'"
												bg.bright="(((${i} ieq 0) or (:cbe_${i})) and (:pe${x} igt 0)) ? 1 : :const_bg_darken"
												bright="(((${i} ieq 0) or (:cbe_${i})) and (:pe${x} igt 0)) ? 1 : :const_bg_darken"/>
											<knob
												id="kn${x}"
												scolor="(((${i} ieq 0) or (:cbe_${i})) and (:pe${x} igt 0)) ? 'kscale' : 'kscale_inactive'"
												bg.bright="(((${i} ieq 0) or (:cbe_${i})) and (:pe${x} igt 0)) ? 1 : :const_bg_darken"
												bright="(((${i} ieq 0) or (:cbe_${i})) and (:pe${x} igt 0)) ? 1 : :const_bg_darken"/>
											<knob
												id="al${x}"
												scolor="(((${i} ieq 0) or (:cbe_${i})) and (:ae${x} igt 0)) ? 'attack_1' : 'attack_inactive'"
												bright="(((${i} ieq 0) or (:cbe_${i})) and (:ae${x} igt 0)) ? 1 : :const_bg_darken"
												bg.bright="(((${i} ieq 0) or (:cbe_${i})) and (:ae${x} igt 0)) ? 1 : :const_bg_darken"/>
											<knob
												id="at${x}"
												scolor="(((${i} ieq 0) or (:cbe_${i})) and (:ae${x} igt 0)) ? 'attack_2' : 'attack_inactive'"
												bright="(((${i} ieq 0) or (:cbe_${i})) and (:ae${x} igt 0)) ? 1 : :const_bg_darken"
												bg.bright="(((${i} ieq 0) or (:cbe_${i})) and (:ae${x} igt 0)) ? 1 : :const_bg_darken"/>
											<knob
												id="rl${x}"
												scolor="(((${i} ieq 0) or (:cbe_${i})) and (:re${x} igt 0)) ? 'release_1' : 'release_inactive'"
												bright="(((${i} ieq 0) or (:cbe_${i})) and (:re${x} igt 0)) ? 1 : :const_bg_darken"
												bg.bright="(((${i} ieq 0) or (:cbe_${i})) and (:re${x} igt 0)) ? 1 : :const_bg_darken"/>
											<knob
												id="rt${x}"
												scolor="(((${i} ieq 0) or (:cbe_${i})) and (:re${x} igt 0)) ? 'release_2' : 'release_inactive'"
												bright="(((${i} ieq 0) or (:cbe_${i})) and (:re${x} igt 0)) ? 1 : :const_bg_darken"
												bg.bright="(((${i} ieq 0) or (:cbe_${i})) and (:re${x} igt 0)) ? 1 : :const_bg_darken"/>
										</ui:with>
										<ui:with pad.h="6" pad.v="4">
											<value
												id="tl${x}"
												detailed="false"
												scolor="(((${i} ieq 0) or (:cbe_${i})) and (:pe${x} igt 0)) ? 'threshold' : 'threshold_inactive'"
												bg.bright="(((${i} ieq 0) or (:cbe_${i})) and (:pe${x} igt 0)) ? 1 : :const_bg_darken"
												bright="(((${i} ieq 0) or (:cbe_${i})) and (:pe${x} igt 0)) ? 1 : :const_bg_darken"/>
											<value
												id="gl${x}"
												detailed="false"
												scolor="(((${i} ieq 0) or (:cbe_${i})) and (:pe${x} igt 0)) ? 'threshold' : 'threshold_inactive'"
												bg.bright="(((${i} ieq 0) or (:cbe_${i})) and (:pe${x} igt 0)) ? 1 : :const_bg_darken"
												bright="(((${i} ieq 0) or (:cbe_${i})) and (:pe${x} igt 0)) ? 1 : :const_bg_darken"/>
											<value
												id="kn${x}"
												detailed="false"
												scolor="(((${i} ieq 0) or (:cbe_${i})) and (:pe${x} igt 0)) ? 'threshold' : 'threshold_inactive'"
												bg.bright="(((${i} ieq 0) or (:cbe_${i})) and (:pe${x} igt 0)) ? 1 : :const_bg_darken"
												bright="(((${i} ieq 0) or (:cbe_${i})) and (:pe${x} igt 0)) ? 1 : :const_bg_darken"/>
											<value
												id="al${x}"
												detailed="false"
												scolor="(((${i} ieq 0) or (:cbe_${i})) and (:ae${x} igt 0)) ? 'attack_1' : 'attack_inactive'"
												bright="(((${i} ieq 0) or (:cbe_${i})) and (:ae${x} igt 0)) ? 1 : :const_bg_darken"
												bg.bright="(((${i} ieq 0) or (:cbe_${i})) and (:ae${x} igt 0)) ? 1 : :const_bg_darken"/>
											<value
												id="at${x}"
												detailed="false"
												scolor="(((${i} ieq 0) or (:cbe_${i})) and (:ae${x} igt 0)) ? 'attack_1' : 'attack_inactive'"
												bright="(((${i} ieq 0) or (:cbe_${i})) and (:ae${x} igt 0)) ? 1 : :const_bg_darken"
												bg.bright="(((${i} ieq 0) or (:cbe_${i})) and (:ae${x} igt 0)) ? 1 : :const_bg_darken"/>
											<value
												id="rl${x}"
												detailed="false"
												scolor="(((${i} ieq 0) or (:cbe_${i})) and (:re${x} igt 0)) ? 'release_2' : 'release_inactive'"
												bright="(((${i} ieq 0) or (:cbe_${i})) and (:re${x} igt 0)) ? 1 : :const_bg_darken"
												bg.bright="(((${i} ieq 0) or (:cbe_${i})) and (:re${x} igt 0)) ? 1 : :const_bg_darken"/>
											<value
												id="rt${x}"
												detailed="false"
												scolor="(((${i} ieq 0) or (:cbe_${i})) and (:re${x} igt 0)) ? 'release_2' : 'release_inactive'"
												bright="(((${i} ieq 0) or (:cbe_${i})) and (:re${x} igt 0)) ? 1 : :const_bg_darken"
												bg.bright="(((${i} ieq 0) or (:cbe_${i})) and (:re${x} igt 0)) ? 1 : :const_bg_darken"/>
										</ui:with>
									</ui:for>
								</grid>

							</vbox>
						</cell>

						<!-- Graph -->
						<vbox>
							<void bg.color="bg" height="4" vreduce="true"/>

							<group ui:inject="GraphGroup" ipadding="0" expand="true" fill="true" text.show="false" hmin="301">
								<ui:eval id="bvis" value="(:i > 0) ? ':cbe_' scat :i : 'true'"/>
								<graph width.min="256" height.min="256" expand="false">
									<origin hpos="-1" vpos="-1" visible="false"/>

									<!-- Gray grid -->
									<ui:for id="g" first="-60" last="12" step="24">
										<marker v="${g} db" color="graph_alt_1"/>
										<marker v="${g} db" ox="1" oy="0" color="graph_alt_1"/>
									</ui:for>

									<!-- Yellow grid -->
									<ui:for id="g" first="-48" last="-24" step="24">
										<marker v="${g} db" color="graph_sec"/>
										<marker v="${g} db" ox="1" oy="0" color="graph_sec"/>
									</ui:for>

									<!-- Axes and boundaries -->
									<marker v="1" ox="1" oy="0" dv="1" dx=":_a_width" dy=":_a_height" color="graph_alt_1" width="2" smooth="true"/>
									<marker v="24 db" color="graph_alt_1" visibility="false"/>
									<marker v="24 db" ox="1" oy="0" color="graph_alt_1" visibility="false"/>
									<axis min="-72 db" max="24 db" color="graph_prim" angle="0.0" log="true" visibility="false"/>
									<axis min="-72 db" max="24 db" color="graph_prim" angle="0.5" log="true" visibility="false"/>

									<!-- 0 dB markers -->
									<marker v="0 db" ox="0" oy="1" width="2" color="graph_prim"/>
									<marker v="0 db" ox="1" oy="0" width="2" color="graph_prim"/>

									<!-- Meshes -->
									<mesh id="cmg_${i}" width="2" color="graph_mesh" smooth="true" visibility="${bvis} and :pe_${i} and :cmv_${i}"/>
									<mesh id="ccg_${i}" width="3" color="graph_mesh" smooth="true" visibility="${bvis} and :pe_${i} "/>

									<!-- Markers -->
									<ui:for id="c" first="0" last="3">
										<ui:set id="x" value="${c}_${i}"/>
										<marker id="al${x}" editable="true" width="2" pointer="hsize" color="attack_1" hcolor="attack_1" smooth="true" visibility="${bvis} and :pe_${i} and :cmv_${i} and :ae${x}"/>
										<text x=":al${x}" y="24 db" text="${c}" color="attack_1" halign="-1" valign="-1" visibility="${bvis} and :pe_${i} and :cmv_${i} and :ae${x}"/>
									</ui:for>
									<ui:for id="c" first="0" last="3">
										<ui:set id="x" value="${c}_${i}"/>
										<marker id="rl${x}" editable="true" width="2" pointer="hsize" color="release_1" hcolor="release_1" smooth="true" visibility="${bvis} and :pe_${i} and :cmv_${i} and :re${x}"/>
										<text x=":rl${x}" y="-72 db" text="${c}" color="release_1" halign="-1" valign="1" visibility="${bvis} and :pe_${i} and :cmv_${i} and :re${x}"/>
									</ui:for>

									<!-- Dots -->
									<ui:for id="c" first="0" last="3">
										<ui:set id="x" value="${c}_${i}"/>
										<dot
											x.id="tl${x}"
											y.id="gl${x}"
											z.id="kn${x}"
											x.editable="true"
											y.editable="true"
											z.editable="true"
											color="graph_mesh"
											hover.color="graph_mesh"
											bcolor="graph_mesh"
											hover.bcolor="graph_mesh"
											pointer="drag"
											visibility="${bvis} and :pe_${i} and :pe${x}"/>

									</ui:for>
									<ui:for id="c" first="0" last="3">
										<ui:set id="x" value="${c}_${i}"/>
										<text x=":tl${x}" y=":gl${x}" text="${c}" color="graph_mesh" halign="-1" valign="1" visibility="${bvis} and :pe_${i} and :pe${x}"/>
									</ui:for>

									<dot x.id="elm_${i}l" y.id="clm_${i}l" color="graph_mesh" bcolor="graph_mesh" visibility="${bvis} and :pe_${i} and !:ssplit"/>
									<dot x.id="elm_${i}l" y.id="clm_${i}l" color="left" bcolor="left" visibility="${bvis} and :pe_${i} and :ssplit"/>
									<dot x.id="elm_${i}r" y.id="clm_${i}r" color="right" bcolor="right" visibility="${bvis} and :pe_${i} and :ssplit"/>

									<!-- Text -->
									<text x="0 db" y="0 db" text="0" halign="1" valign="1"/>
									<ui:attributes x="0 db" halign="1" valign="-1">
										<text y="24 db" text="graph.units.db"/>
										<text y="12 db" text="+12"/>
										<text y="-12 db" text="-12"/>
										<text y="-24 db" text="-24"/>
										<text y="-36 db" text="-36"/>
										<text y="-48 db" text="-48"/>
										<text y="-60 db" text="-60"/>
										<text y="-72 db" text="graph.axis.out" valign="1"/>
									</ui:attributes>
									<ui:attributes y="0 db" halign="-1" valign="1">
										<text x="24 db" text="graph.units.db"/>
										<text x="12 db" text="+12"/>
										<text x="-12 db" text="-12"/>
										<text x="-24 db" text="-24"/>
										<text x="-36 db" text="-36"/>
										<text x="-48 db" text="-48"/>
										<text x="-60 db" text="-60"/>
										<text x="-72 db" text="graph.axis.in" halign="1"/>
									</ui:attributes>
								</graph>
							</group>
						</vbox>

						<!-- Meters -->
						<vbox>
							<void bg.color="bg" height="4" vreduce="true"/>
							<label text="labels.gain_" bg.color="bg_schema" pad.v="4"/>
							<ledmeter vexpand="true" height.min="256" angle="1">
								<ledchannel id="rlm_${i}l" min="-72 db" max="24 db" log="true" balance="0 db" balance.visibility="true" type="peak" value.color="bright_blue"/>
								<ledchannel id="rlm_${i}r" min="-72 db" max="24 db" log="true" balance="0 db" balance.visibility="true" type="peak" value.color="bright_blue"/>
							</ledmeter>
						</vbox>

						<!-- Additional controls -->
						<cell cols="2">
							<grid rows="5" cols="11" bg.color="bg_schema">

								<cell cols="11">
									<hbox>
										<ui:attributes bg.color="bg_schema" bg.bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken">
											<hbox bg.color="bg_schema" spacing="6">
												<ui:with pad.v="4">
													<button id="pe_${i}" text="labels.chan.on" ui:inject="Button_red_8" hfill="true" height="19" pad.l="6"/>
													<button id="bs_${i}" text="labels.chan.S_olo" ui:inject="Button_green_8" hfill="true" height="19"/>
													<button id="bm_${i}" text="labels.chan.M_ute" ui:inject="Button_red_8" hfill="true" pad.r="6" height="19"/>
													<void hexpand="true"/>
												</ui:with>
											</hbox>
										</ui:attributes>
										<vsep bg.color="bg" pad.h="2" hreduce="true"/>
										<ui:attributes bg.color="bg_schema" bg.bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken">
											<hbox spacing="4" vexpand="false" bg.color="bg_schema" pad.h="6" pad.b="4" pad.t="4">
												<void hexpand="true"/>
												<button id="cmv_${i}" size="16" width="48" text="labels.model" ui:inject="Button_yellow"/>
											</hbox>
										</ui:attributes>
									</hbox>
								</cell>
								<cell cols="11"><hsep bg.color="bg" pad.v="2" vreduce="true"/></cell>

								<label text="labels.ratio_low" pad.h="6" pad.v="4" bg.color="bg_schema" bg.bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken"/>
								<cell rows="3"><vsep bg.color="bg" pad.h="2" hreduce="true"/></cell>
								<label text="labels.ratio_high" pad.h="6" pad.v="4" bg.color="bg_schema" bg.bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken"/>
								<cell rows="3"><vsep bg.color="bg" pad.h="2" hreduce="true"/></cell>
								<label text="labels.makeup" pad.h="6" pad.v="4" bg.color="bg_schema" bg.bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken"/>
								<cell rows="3"><vsep bg.color="bg" pad.h="2" hreduce="true"/></cell>
								<label text="labels.attack" pad.h="6" pad.v="4" bg.color="bg_schema" bg.bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken"/>
								<cell rows="3"><vsep bg.color="bg" pad.h="2" hreduce="true"/></cell>
								<label text="labels.release" bg.color="bg_schema" bg.bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken"/>
								<cell rows="3"><vsep bg.color="bg" pad.h="2" hreduce="true"/></cell>
								<label text="labels.hold" bg.color="bg_schema" bg.bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken"/>

								<ui:attributes bg.color="bg_schema" bg.bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken" bright="((${i} ieq 0) or :cbe_${i}) ?  1 : :const_bg_darken">
									<ui:with pad.h="6" pad.v="4">
										<knob id="llr_${i}" size="20" scolor="((${i} ieq 0) or :cbe_${i}) ?  'cycle' : 'cycle_inactive'" scolor.hue=":hue_${i}"/>
										<knob id="hlr_${i}" size="20" scolor="((${i} ieq 0) or :cbe_${i}) ?  'cycle' : 'cycle_inactive'" scolor.hue=":hue_${i}"/>
										<knob id="mk_${i}" size="20" scolor="((${i} ieq 0) or :cbe_${i}) ?  'cycle' : 'cycle_inactive'" scolor.hue=":hue_${i}"/>
										<knob id="atd_${i}" size="20" scolor="((${i} ieq 0) or :cbe_${i}) ?  'attack' : 'attack_inactive'"/>
										<knob id="rtd_${i}" size="20" scolor="((${i} ieq 0) or :cbe_${i}) ?  'release' : 'release_inactive'"/>
										<knob id="ht_${i}" size="20" scolor="((${i} ieq 0) or :cbe_${i}) ?  'cycle' : 'cycle_inactive'" scolor.hue=":hue_${i}"/>

										<value id="llr_${i}" same.line="true"/>
										<value id="hlr_${i}" same.line="true"/>
										<value id="mk_${i}" same.line="true" wmin="48"/>
										<value id="atd_${i}" same.line="true" wmin="46"/>
										<value id="rtd_${i}" same.line="true" wmin="46"/>
										<value id="ht_${i}" same.line="true" wmin="46"/>
									</ui:with>
								</ui:attributes>
							</grid>
						</cell>
					</grid>
				</ui:for>
			</cgroup>
		</hbox>
	</vbox>
</plugin>
